
STM32_Drivers_Layer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000954  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b18  08000b20  00010b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b18  08000b18  00010b20  2**0
                  CONTENTS
  4 .ARM          00000000  08000b18  08000b18  00010b20  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b18  08000b20  00010b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b18  08000b18  00010b18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b1c  08000b1c  00010b1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b20  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b20  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010b20  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010b50  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a5b  00000000  00000000  00010b93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002a6  00000000  00000000  000115ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011898  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00011960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000021b7  00000000  00000000  000119ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000139c  00000000  00000000  00013ba3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009321  00000000  00000000  00014f3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0001e260  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007a  00000000  00000000  0001e4e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000b00 	.word	0x08000b00

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000b00 	.word	0x08000b00

08000204 <GPIO_Init>:
 *
 * @Note              -  none
*/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000204:	b590      	push	{r4, r7, lr}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0;
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	2101      	movs	r1, #1
 8000216:	4618      	mov	r0, r3
 8000218:	f000 f9d6 	bl	80005c8 <GPIO_PeriClockControl>

	//Pin Configuration
	switch (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) {
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	795b      	ldrb	r3, [r3, #5]
 8000220:	2b06      	cmp	r3, #6
 8000222:	f200 80d0 	bhi.w	80003c6 <GPIO_Init+0x1c2>
 8000226:	a201      	add	r2, pc, #4	; (adr r2, 800022c <GPIO_Init+0x28>)
 8000228:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800022c:	080002c1 	.word	0x080002c1
 8000230:	080002ff 	.word	0x080002ff
 8000234:	08000285 	.word	0x08000285
 8000238:	08000249 	.word	0x08000249
 800023c:	0800033b 	.word	0x0800033b
 8000240:	0800036b 	.word	0x0800036b
 8000244:	0800039b 	.word	0x0800039b
	case GPIO_MODE_ANALOG: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	791b      	ldrb	r3, [r3, #4]
 8000252:	005b      	lsls	r3, r3, #1
 8000254:	2103      	movs	r1, #3
 8000256:	fa01 f303 	lsl.w	r3, r1, r3
 800025a:	43db      	mvns	r3, r3
 800025c:	4619      	mov	r1, r3
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	400a      	ands	r2, r1
 8000264:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	681a      	ldr	r2, [r3, #0]
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	791b      	ldrb	r3, [r3, #4]
 8000270:	005b      	lsls	r3, r3, #1
 8000272:	2103      	movs	r1, #3
 8000274:	fa01 f303 	lsl.w	r3, r1, r3
 8000278:	4619      	mov	r1, r3
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	430a      	orrs	r2, r1
 8000280:	601a      	str	r2, [r3, #0]
		break;
 8000282:	e0a1      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_ALTFN: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	791b      	ldrb	r3, [r3, #4]
 800028e:	005b      	lsls	r3, r3, #1
 8000290:	2103      	movs	r1, #3
 8000292:	fa01 f303 	lsl.w	r3, r1, r3
 8000296:	43db      	mvns	r3, r3
 8000298:	4619      	mov	r1, r3
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	400a      	ands	r2, r1
 80002a0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x2<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	681a      	ldr	r2, [r3, #0]
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	791b      	ldrb	r3, [r3, #4]
 80002ac:	005b      	lsls	r3, r3, #1
 80002ae:	2102      	movs	r1, #2
 80002b0:	fa01 f303 	lsl.w	r3, r1, r3
 80002b4:	4619      	mov	r1, r3
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	430a      	orrs	r2, r1
 80002bc:	601a      	str	r2, [r3, #0]
		break;
 80002be:	e083      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IN:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	791b      	ldrb	r3, [r3, #4]
 80002ca:	005b      	lsls	r3, r3, #1
 80002cc:	2103      	movs	r1, #3
 80002ce:	fa01 f303 	lsl.w	r3, r1, r3
 80002d2:	43db      	mvns	r3, r3
 80002d4:	4619      	mov	r1, r3
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	400a      	ands	r2, r1
 80002dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER &= ~(0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	681a      	ldr	r2, [r3, #0]
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	791b      	ldrb	r3, [r3, #4]
 80002e8:	005b      	lsls	r3, r3, #1
 80002ea:	2101      	movs	r1, #1
 80002ec:	fa01 f303 	lsl.w	r3, r1, r3
 80002f0:	43db      	mvns	r3, r3
 80002f2:	4619      	mov	r1, r3
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	400a      	ands	r2, r1
 80002fa:	601a      	str	r2, [r3, #0]
		break;
 80002fc:	e064      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_OUT:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	681a      	ldr	r2, [r3, #0]
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	791b      	ldrb	r3, [r3, #4]
 8000308:	005b      	lsls	r3, r3, #1
 800030a:	2103      	movs	r1, #3
 800030c:	fa01 f303 	lsl.w	r3, r1, r3
 8000310:	43db      	mvns	r3, r3
 8000312:	4619      	mov	r1, r3
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	400a      	ands	r2, r1
 800031a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	681a      	ldr	r2, [r3, #0]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	2101      	movs	r1, #1
 800032a:	fa01 f303 	lsl.w	r3, r1, r3
 800032e:	4619      	mov	r1, r3
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	430a      	orrs	r2, r1
 8000336:	601a      	str	r2, [r3, #0]
		break;
 8000338:	e046      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_FT:
	{
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800033a:	4b97      	ldr	r3, [pc, #604]	; (8000598 <GPIO_Init+0x394>)
 800033c:	68db      	ldr	r3, [r3, #12]
 800033e:	687a      	ldr	r2, [r7, #4]
 8000340:	7912      	ldrb	r2, [r2, #4]
 8000342:	4611      	mov	r1, r2
 8000344:	2201      	movs	r2, #1
 8000346:	408a      	lsls	r2, r1
 8000348:	4611      	mov	r1, r2
 800034a:	4a93      	ldr	r2, [pc, #588]	; (8000598 <GPIO_Init+0x394>)
 800034c:	430b      	orrs	r3, r1
 800034e:	60d3      	str	r3, [r2, #12]
		EXTI->RTSR&=~(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));//Clearing Rising Intrupt line
 8000350:	4b91      	ldr	r3, [pc, #580]	; (8000598 <GPIO_Init+0x394>)
 8000352:	689b      	ldr	r3, [r3, #8]
 8000354:	687a      	ldr	r2, [r7, #4]
 8000356:	7912      	ldrb	r2, [r2, #4]
 8000358:	4611      	mov	r1, r2
 800035a:	2201      	movs	r2, #1
 800035c:	408a      	lsls	r2, r1
 800035e:	43d2      	mvns	r2, r2
 8000360:	4611      	mov	r1, r2
 8000362:	4a8d      	ldr	r2, [pc, #564]	; (8000598 <GPIO_Init+0x394>)
 8000364:	400b      	ands	r3, r1
 8000366:	6093      	str	r3, [r2, #8]
		break;
 8000368:	e02e      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_RT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800036a:	4b8b      	ldr	r3, [pc, #556]	; (8000598 <GPIO_Init+0x394>)
 800036c:	689b      	ldr	r3, [r3, #8]
 800036e:	687a      	ldr	r2, [r7, #4]
 8000370:	7912      	ldrb	r2, [r2, #4]
 8000372:	4611      	mov	r1, r2
 8000374:	2201      	movs	r2, #1
 8000376:	408a      	lsls	r2, r1
 8000378:	4611      	mov	r1, r2
 800037a:	4a87      	ldr	r2, [pc, #540]	; (8000598 <GPIO_Init+0x394>)
 800037c:	430b      	orrs	r3, r1
 800037e:	6093      	str	r3, [r2, #8]
		EXTI->FTSR&=~(0x01<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 8000380:	4b85      	ldr	r3, [pc, #532]	; (8000598 <GPIO_Init+0x394>)
 8000382:	68db      	ldr	r3, [r3, #12]
 8000384:	687a      	ldr	r2, [r7, #4]
 8000386:	7912      	ldrb	r2, [r2, #4]
 8000388:	4611      	mov	r1, r2
 800038a:	2201      	movs	r2, #1
 800038c:	408a      	lsls	r2, r1
 800038e:	43d2      	mvns	r2, r2
 8000390:	4611      	mov	r1, r2
 8000392:	4a81      	ldr	r2, [pc, #516]	; (8000598 <GPIO_Init+0x394>)
 8000394:	400b      	ands	r3, r1
 8000396:	60d3      	str	r3, [r2, #12]
		break;
 8000398:	e016      	b.n	80003c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_RFT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800039a:	4b7f      	ldr	r3, [pc, #508]	; (8000598 <GPIO_Init+0x394>)
 800039c:	689b      	ldr	r3, [r3, #8]
 800039e:	687a      	ldr	r2, [r7, #4]
 80003a0:	7912      	ldrb	r2, [r2, #4]
 80003a2:	4611      	mov	r1, r2
 80003a4:	2201      	movs	r2, #1
 80003a6:	408a      	lsls	r2, r1
 80003a8:	4611      	mov	r1, r2
 80003aa:	4a7b      	ldr	r2, [pc, #492]	; (8000598 <GPIO_Init+0x394>)
 80003ac:	430b      	orrs	r3, r1
 80003ae:	6093      	str	r3, [r2, #8]
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 80003b0:	4b79      	ldr	r3, [pc, #484]	; (8000598 <GPIO_Init+0x394>)
 80003b2:	68db      	ldr	r3, [r3, #12]
 80003b4:	687a      	ldr	r2, [r7, #4]
 80003b6:	7912      	ldrb	r2, [r2, #4]
 80003b8:	4611      	mov	r1, r2
 80003ba:	2201      	movs	r2, #1
 80003bc:	408a      	lsls	r2, r1
 80003be:	4611      	mov	r1, r2
 80003c0:	4a75      	ldr	r2, [pc, #468]	; (8000598 <GPIO_Init+0x394>)
 80003c2:	430b      	orrs	r3, r1
 80003c4:	60d3      	str	r3, [r2, #12]
	}
	default: {
		break;
 80003c6:	bf00      	nop
	}

	}
	//2. configure the speed

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	799b      	ldrb	r3, [r3, #6]
 80003cc:	461a      	mov	r2, r3
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	005b      	lsls	r3, r3, #1
 80003d4:	fa02 f303 	lsl.w	r3, r2, r3
 80003d8:	60fb      	str	r3, [r7, #12]
	(pGPIOHandle->pGPIOx->OSPEEDR) &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	689a      	ldr	r2, [r3, #8]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	791b      	ldrb	r3, [r3, #4]
 80003e4:	005b      	lsls	r3, r3, #1
 80003e6:	2103      	movs	r1, #3
 80003e8:	fa01 f303 	lsl.w	r3, r1, r3
 80003ec:	43db      	mvns	r3, r3
 80003ee:	4619      	mov	r1, r3
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	400a      	ands	r2, r1
 80003f6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	6899      	ldr	r1, [r3, #8]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	68fa      	ldr	r2, [r7, #12]
 8000404:	430a      	orrs	r2, r1
 8000406:	609a      	str	r2, [r3, #8]

	//Pull Push Configuration
	temp=0;
 8000408:	2300      	movs	r3, #0
 800040a:	60fb      	str	r3, [r7, #12]
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	79db      	ldrb	r3, [r3, #7]
 8000410:	461a      	mov	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	005b      	lsls	r3, r3, #1
 8000418:	fa02 f303 	lsl.w	r3, r2, r3
 800041c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR|= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	68da      	ldr	r2, [r3, #12]
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	005b      	lsls	r3, r3, #1
 800042a:	2103      	movs	r1, #3
 800042c:	fa01 f303 	lsl.w	r3, r1, r3
 8000430:	43db      	mvns	r3, r3
 8000432:	4619      	mov	r1, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	430a      	orrs	r2, r1
 800043a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR|=temp;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	68d9      	ldr	r1, [r3, #12]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	68fa      	ldr	r2, [r7, #12]
 8000448:	430a      	orrs	r2, r1
 800044a:	60da      	str	r2, [r3, #12]
//	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
//	pGPIOHandle->pGPIOx->OTYPER|= ~(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
//	pGPIOHandle->pGPIOx->OTYPER|=temp;
//
	//Alternative Functionality Mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode==GPIO_MODE_ALTFN)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	7a5b      	ldrb	r3, [r3, #9]
 8000450:	2b02      	cmp	r3, #2
 8000452:	d138      	bne.n	80004c6 <GPIO_Init+0x2c2>
	{
		pGPIOHandle->pGPIOx->AFR[pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8]&=~(0xF<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8)));
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	687a      	ldr	r2, [r7, #4]
 800045a:	7912      	ldrb	r2, [r2, #4]
 800045c:	08d2      	lsrs	r2, r2, #3
 800045e:	b2d0      	uxtb	r0, r2
 8000460:	4602      	mov	r2, r0
 8000462:	3208      	adds	r2, #8
 8000464:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	791b      	ldrb	r3, [r3, #4]
 800046c:	f003 0307 	and.w	r3, r3, #7
 8000470:	009b      	lsls	r3, r3, #2
 8000472:	210f      	movs	r1, #15
 8000474:	fa01 f303 	lsl.w	r3, r1, r3
 8000478:	43db      	mvns	r3, r3
 800047a:	4619      	mov	r1, r3
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4011      	ands	r1, r2
 8000482:	f100 0208 	add.w	r2, r0, #8
 8000486:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8]|=(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8));
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	687a      	ldr	r2, [r7, #4]
 8000490:	7912      	ldrb	r2, [r2, #4]
 8000492:	08d2      	lsrs	r2, r2, #3
 8000494:	b2d1      	uxtb	r1, r2
 8000496:	460a      	mov	r2, r1
 8000498:	3208      	adds	r2, #8
 800049a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	4618      	mov	r0, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	f003 0307 	and.w	r3, r3, #7
 80004ac:	009b      	lsls	r3, r3, #2
 80004ae:	fa00 f303 	lsl.w	r3, r0, r3
 80004b2:	461c      	mov	r4, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4608      	mov	r0, r1
 80004ba:	ea42 0104 	orr.w	r1, r2, r4
 80004be:	f100 0208 	add.w	r2, r0, #8
 80004c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
	//2. configure the GPIO port selection in SYSCFG_EXTICR
	uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	089b      	lsrs	r3, r3, #2
 80004cc:	72fb      	strb	r3, [r7, #11]
	uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	f003 0303 	and.w	r3, r3, #3
 80004d6:	72bb      	strb	r3, [r7, #10]
	uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a2f      	ldr	r2, [pc, #188]	; (800059c <GPIO_Init+0x398>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d039      	beq.n	8000556 <GPIO_Init+0x352>
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a2e      	ldr	r2, [pc, #184]	; (80005a0 <GPIO_Init+0x39c>)
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d032      	beq.n	8000552 <GPIO_Init+0x34e>
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a2c      	ldr	r2, [pc, #176]	; (80005a4 <GPIO_Init+0x3a0>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d02b      	beq.n	800054e <GPIO_Init+0x34a>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a2b      	ldr	r2, [pc, #172]	; (80005a8 <GPIO_Init+0x3a4>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d024      	beq.n	800054a <GPIO_Init+0x346>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a29      	ldr	r2, [pc, #164]	; (80005ac <GPIO_Init+0x3a8>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d01d      	beq.n	8000546 <GPIO_Init+0x342>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a28      	ldr	r2, [pc, #160]	; (80005b0 <GPIO_Init+0x3ac>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d016      	beq.n	8000542 <GPIO_Init+0x33e>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a26      	ldr	r2, [pc, #152]	; (80005b4 <GPIO_Init+0x3b0>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d00f      	beq.n	800053e <GPIO_Init+0x33a>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a25      	ldr	r2, [pc, #148]	; (80005b8 <GPIO_Init+0x3b4>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d008      	beq.n	800053a <GPIO_Init+0x336>
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a23      	ldr	r2, [pc, #140]	; (80005bc <GPIO_Init+0x3b8>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d101      	bne.n	8000536 <GPIO_Init+0x332>
 8000532:	2308      	movs	r3, #8
 8000534:	e010      	b.n	8000558 <GPIO_Init+0x354>
 8000536:	2300      	movs	r3, #0
 8000538:	e00e      	b.n	8000558 <GPIO_Init+0x354>
 800053a:	2307      	movs	r3, #7
 800053c:	e00c      	b.n	8000558 <GPIO_Init+0x354>
 800053e:	2306      	movs	r3, #6
 8000540:	e00a      	b.n	8000558 <GPIO_Init+0x354>
 8000542:	2305      	movs	r3, #5
 8000544:	e008      	b.n	8000558 <GPIO_Init+0x354>
 8000546:	2304      	movs	r3, #4
 8000548:	e006      	b.n	8000558 <GPIO_Init+0x354>
 800054a:	2303      	movs	r3, #3
 800054c:	e004      	b.n	8000558 <GPIO_Init+0x354>
 800054e:	2302      	movs	r3, #2
 8000550:	e002      	b.n	8000558 <GPIO_Init+0x354>
 8000552:	2301      	movs	r3, #1
 8000554:	e000      	b.n	8000558 <GPIO_Init+0x354>
 8000556:	2300      	movs	r3, #0
 8000558:	727b      	strb	r3, [r7, #9]
	SYSCFG_PCLK_EN();
 800055a:	4b19      	ldr	r3, [pc, #100]	; (80005c0 <GPIO_Init+0x3bc>)
 800055c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800055e:	4a18      	ldr	r2, [pc, #96]	; (80005c0 <GPIO_Init+0x3bc>)
 8000560:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000564:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 8000566:	7a7a      	ldrb	r2, [r7, #9]
 8000568:	7abb      	ldrb	r3, [r7, #10]
 800056a:	009b      	lsls	r3, r3, #2
 800056c:	fa02 f103 	lsl.w	r1, r2, r3
 8000570:	4a14      	ldr	r2, [pc, #80]	; (80005c4 <GPIO_Init+0x3c0>)
 8000572:	7afb      	ldrb	r3, [r7, #11]
 8000574:	3302      	adds	r3, #2
 8000576:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	//3 . enable the exti interrupt delivery using IMR
	EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800057a:	4b07      	ldr	r3, [pc, #28]	; (8000598 <GPIO_Init+0x394>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a03      	ldr	r2, [pc, #12]	; (8000598 <GPIO_Init+0x394>)
 800058c:	430b      	orrs	r3, r1
 800058e:	6013      	str	r3, [r2, #0]
}
 8000590:	bf00      	nop
 8000592:	3714      	adds	r7, #20
 8000594:	46bd      	mov	sp, r7
 8000596:	bd90      	pop	{r4, r7, pc}
 8000598:	40013c00 	.word	0x40013c00
 800059c:	40020000 	.word	0x40020000
 80005a0:	40020400 	.word	0x40020400
 80005a4:	40020800 	.word	0x40020800
 80005a8:	40020c00 	.word	0x40020c00
 80005ac:	40021000 	.word	0x40021000
 80005b0:	40021400 	.word	0x40021400
 80005b4:	40021800 	.word	0x40021800
 80005b8:	40021c00 	.word	0x40021c00
 80005bc:	40022000 	.word	0x40022000
 80005c0:	40023800 	.word	0x40023800
 80005c4:	40013800 	.word	0x40013800

080005c8 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80005c8:	b480      	push	{r7}
 80005ca:	b083      	sub	sp, #12
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
 80005d0:	460b      	mov	r3, r1
 80005d2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80005d4:	78fb      	ldrb	r3, [r7, #3]
 80005d6:	2b01      	cmp	r3, #1
 80005d8:	d162      	bne.n	80006a0 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA) {
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	4a64      	ldr	r2, [pc, #400]	; (8000770 <GPIO_PeriClockControl+0x1a8>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d106      	bne.n	80005f0 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80005e2:	4b64      	ldr	r3, [pc, #400]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80005e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005e6:	4a63      	ldr	r2, [pc, #396]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80005e8:	f043 0301 	orr.w	r3, r3, #1
 80005ec:	6313      	str	r3, [r2, #48]	; 0x30
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
		}
	}

}
 80005ee:	e0b9      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	4a61      	ldr	r2, [pc, #388]	; (8000778 <GPIO_PeriClockControl+0x1b0>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d106      	bne.n	8000606 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80005f8:	4b5e      	ldr	r3, [pc, #376]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80005fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005fc:	4a5d      	ldr	r2, [pc, #372]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80005fe:	f043 0302 	orr.w	r3, r3, #2
 8000602:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000604:	e0ae      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	4a5c      	ldr	r2, [pc, #368]	; (800077c <GPIO_PeriClockControl+0x1b4>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d106      	bne.n	800061c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800060e:	4b59      	ldr	r3, [pc, #356]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000610:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000612:	4a58      	ldr	r2, [pc, #352]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000614:	f043 0304 	orr.w	r3, r3, #4
 8000618:	6313      	str	r3, [r2, #48]	; 0x30
}
 800061a:	e0a3      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	4a58      	ldr	r2, [pc, #352]	; (8000780 <GPIO_PeriClockControl+0x1b8>)
 8000620:	4293      	cmp	r3, r2
 8000622:	d106      	bne.n	8000632 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000624:	4b53      	ldr	r3, [pc, #332]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000626:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000628:	4a52      	ldr	r2, [pc, #328]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800062a:	f043 0308 	orr.w	r3, r3, #8
 800062e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000630:	e098      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	4a53      	ldr	r2, [pc, #332]	; (8000784 <GPIO_PeriClockControl+0x1bc>)
 8000636:	4293      	cmp	r3, r2
 8000638:	d106      	bne.n	8000648 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800063a:	4b4e      	ldr	r3, [pc, #312]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800063c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800063e:	4a4d      	ldr	r2, [pc, #308]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000640:	f043 0310 	orr.w	r3, r3, #16
 8000644:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000646:	e08d      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	4a4f      	ldr	r2, [pc, #316]	; (8000788 <GPIO_PeriClockControl+0x1c0>)
 800064c:	4293      	cmp	r3, r2
 800064e:	d106      	bne.n	800065e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000650:	4b48      	ldr	r3, [pc, #288]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000652:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000654:	4a47      	ldr	r2, [pc, #284]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000656:	f043 0320 	orr.w	r3, r3, #32
 800065a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800065c:	e082      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	4a4a      	ldr	r2, [pc, #296]	; (800078c <GPIO_PeriClockControl+0x1c4>)
 8000662:	4293      	cmp	r3, r2
 8000664:	d106      	bne.n	8000674 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000666:	4b43      	ldr	r3, [pc, #268]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000668:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800066a:	4a42      	ldr	r2, [pc, #264]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800066c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000670:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000672:	e077      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	4a46      	ldr	r2, [pc, #280]	; (8000790 <GPIO_PeriClockControl+0x1c8>)
 8000678:	4293      	cmp	r3, r2
 800067a:	d106      	bne.n	800068a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800067c:	4b3d      	ldr	r3, [pc, #244]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800067e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000680:	4a3c      	ldr	r2, [pc, #240]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000682:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000686:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000688:	e06c      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	4a41      	ldr	r2, [pc, #260]	; (8000794 <GPIO_PeriClockControl+0x1cc>)
 800068e:	4293      	cmp	r3, r2
 8000690:	d168      	bne.n	8000764 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000692:	4b38      	ldr	r3, [pc, #224]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000696:	4a37      	ldr	r2, [pc, #220]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000698:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800069c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800069e:	e061      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	4a33      	ldr	r2, [pc, #204]	; (8000770 <GPIO_PeriClockControl+0x1a8>)
 80006a4:	4293      	cmp	r3, r2
 80006a6:	d106      	bne.n	80006b6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80006a8:	4b32      	ldr	r3, [pc, #200]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ac:	4a31      	ldr	r2, [pc, #196]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006ae:	f023 0301 	bic.w	r3, r3, #1
 80006b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006b4:	e056      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	4a2f      	ldr	r2, [pc, #188]	; (8000778 <GPIO_PeriClockControl+0x1b0>)
 80006ba:	4293      	cmp	r3, r2
 80006bc:	d106      	bne.n	80006cc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80006be:	4b2d      	ldr	r3, [pc, #180]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c2:	4a2c      	ldr	r2, [pc, #176]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006c4:	f023 0302 	bic.w	r3, r3, #2
 80006c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006ca:	e04b      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	4a2b      	ldr	r2, [pc, #172]	; (800077c <GPIO_PeriClockControl+0x1b4>)
 80006d0:	4293      	cmp	r3, r2
 80006d2:	d106      	bne.n	80006e2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80006d4:	4b27      	ldr	r3, [pc, #156]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006d8:	4a26      	ldr	r2, [pc, #152]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006da:	f023 0304 	bic.w	r3, r3, #4
 80006de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006e0:	e040      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	4a26      	ldr	r2, [pc, #152]	; (8000780 <GPIO_PeriClockControl+0x1b8>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d106      	bne.n	80006f8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80006ea:	4b22      	ldr	r3, [pc, #136]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ee:	4a21      	ldr	r2, [pc, #132]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 80006f0:	f023 0308 	bic.w	r3, r3, #8
 80006f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006f6:	e035      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	4a22      	ldr	r2, [pc, #136]	; (8000784 <GPIO_PeriClockControl+0x1bc>)
 80006fc:	4293      	cmp	r3, r2
 80006fe:	d106      	bne.n	800070e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000700:	4b1c      	ldr	r3, [pc, #112]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000702:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000704:	4a1b      	ldr	r2, [pc, #108]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000706:	f023 0310 	bic.w	r3, r3, #16
 800070a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800070c:	e02a      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	4a1d      	ldr	r2, [pc, #116]	; (8000788 <GPIO_PeriClockControl+0x1c0>)
 8000712:	4293      	cmp	r3, r2
 8000714:	d106      	bne.n	8000724 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000716:	4b17      	ldr	r3, [pc, #92]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000718:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800071a:	4a16      	ldr	r2, [pc, #88]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800071c:	f023 0320 	bic.w	r3, r3, #32
 8000720:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000722:	e01f      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	4a19      	ldr	r2, [pc, #100]	; (800078c <GPIO_PeriClockControl+0x1c4>)
 8000728:	4293      	cmp	r3, r2
 800072a:	d106      	bne.n	800073a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800072c:	4b11      	ldr	r3, [pc, #68]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800072e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000730:	4a10      	ldr	r2, [pc, #64]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000732:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000736:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000738:	e014      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	4a14      	ldr	r2, [pc, #80]	; (8000790 <GPIO_PeriClockControl+0x1c8>)
 800073e:	4293      	cmp	r3, r2
 8000740:	d106      	bne.n	8000750 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000742:	4b0c      	ldr	r3, [pc, #48]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000746:	4a0b      	ldr	r2, [pc, #44]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 8000748:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800074c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800074e:	e009      	b.n	8000764 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	4a10      	ldr	r2, [pc, #64]	; (8000794 <GPIO_PeriClockControl+0x1cc>)
 8000754:	4293      	cmp	r3, r2
 8000756:	d105      	bne.n	8000764 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000758:	4b06      	ldr	r3, [pc, #24]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800075a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800075c:	4a05      	ldr	r2, [pc, #20]	; (8000774 <GPIO_PeriClockControl+0x1ac>)
 800075e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000762:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000764:	bf00      	nop
 8000766:	370c      	adds	r7, #12
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr
 8000770:	40020000 	.word	0x40020000
 8000774:	40023800 	.word	0x40023800
 8000778:	40020400 	.word	0x40020400
 800077c:	40020800 	.word	0x40020800
 8000780:	40020c00 	.word	0x40020c00
 8000784:	40021000 	.word	0x40021000
 8000788:	40021400 	.word	0x40021400
 800078c:	40021800 	.word	0x40021800
 8000790:	40021c00 	.word	0x40021c00
 8000794:	40022000 	.word	0x40022000

08000798 <GPIO_WriteToOutputPin>:
 *
 * @Note              -

 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000798:	b480      	push	{r7}
 800079a:	b083      	sub	sp, #12
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
 80007a0:	460b      	mov	r3, r1
 80007a2:	70fb      	strb	r3, [r7, #3]
 80007a4:	4613      	mov	r3, r2
 80007a6:	70bb      	strb	r3, [r7, #2]
	if(Value==ENABLE)
 80007a8:	78bb      	ldrb	r3, [r7, #2]
 80007aa:	2b01      	cmp	r3, #1
 80007ac:	d109      	bne.n	80007c2 <GPIO_WriteToOutputPin+0x2a>
	{
		 pGPIOx->ODR|=(1<<PinNumber);
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	695b      	ldr	r3, [r3, #20]
 80007b2:	78fa      	ldrb	r2, [r7, #3]
 80007b4:	2101      	movs	r1, #1
 80007b6:	fa01 f202 	lsl.w	r2, r1, r2
 80007ba:	431a      	orrs	r2, r3
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	615a      	str	r2, [r3, #20]
		 pGPIOx->ODR&=~(1<<PinNumber);
	}



}
 80007c0:	e009      	b.n	80007d6 <GPIO_WriteToOutputPin+0x3e>
		 pGPIOx->ODR&=~(1<<PinNumber);
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	695b      	ldr	r3, [r3, #20]
 80007c6:	78fa      	ldrb	r2, [r7, #3]
 80007c8:	2101      	movs	r1, #1
 80007ca:	fa01 f202 	lsl.w	r2, r1, r2
 80007ce:	43d2      	mvns	r2, r2
 80007d0:	401a      	ands	r2, r3
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	615a      	str	r2, [r3, #20]
}
 80007d6:	bf00      	nop
 80007d8:	370c      	adds	r7, #12
 80007da:	46bd      	mov	sp, r7
 80007dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e0:	4770      	bx	lr
	...

080007e4 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 80007e4:	b480      	push	{r7}
 80007e6:	b083      	sub	sp, #12
 80007e8:	af00      	add	r7, sp, #0
 80007ea:	4603      	mov	r3, r0
 80007ec:	460a      	mov	r2, r1
 80007ee:	71fb      	strb	r3, [r7, #7]
 80007f0:	4613      	mov	r3, r2
 80007f2:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 80007f4:	79bb      	ldrb	r3, [r7, #6]
 80007f6:	2b01      	cmp	r3, #1
 80007f8:	d133      	bne.n	8000862 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	2b1f      	cmp	r3, #31
 80007fe:	d80a      	bhi.n	8000816 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000800:	4b35      	ldr	r3, [pc, #212]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	79fa      	ldrb	r2, [r7, #7]
 8000806:	2101      	movs	r1, #1
 8000808:	fa01 f202 	lsl.w	r2, r1, r2
 800080c:	4611      	mov	r1, r2
 800080e:	4a32      	ldr	r2, [pc, #200]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000810:	430b      	orrs	r3, r1
 8000812:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 8000814:	e059      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 8000816:	79fb      	ldrb	r3, [r7, #7]
 8000818:	2b1f      	cmp	r3, #31
 800081a:	d90f      	bls.n	800083c <GPIO_IRQInterruptConfig+0x58>
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	2b3f      	cmp	r3, #63	; 0x3f
 8000820:	d80c      	bhi.n	800083c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000822:	4b2e      	ldr	r3, [pc, #184]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	79fa      	ldrb	r2, [r7, #7]
 8000828:	f002 021f 	and.w	r2, r2, #31
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	4611      	mov	r1, r2
 8000834:	4a29      	ldr	r2, [pc, #164]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000836:	430b      	orrs	r3, r1
 8000838:	6013      	str	r3, [r2, #0]
 800083a:	e046      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 800083c:	79fb      	ldrb	r3, [r7, #7]
 800083e:	2b3f      	cmp	r3, #63	; 0x3f
 8000840:	d943      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 8000842:	79fb      	ldrb	r3, [r7, #7]
 8000844:	2b5f      	cmp	r3, #95	; 0x5f
 8000846:	d840      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 8000848:	4b25      	ldr	r3, [pc, #148]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	79fa      	ldrb	r2, [r7, #7]
 800084e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000852:	2101      	movs	r1, #1
 8000854:	fa01 f202 	lsl.w	r2, r1, r2
 8000858:	4611      	mov	r1, r2
 800085a:	4a21      	ldr	r2, [pc, #132]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800085c:	430b      	orrs	r3, r1
 800085e:	6013      	str	r3, [r2, #0]
}
 8000860:	e033      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	2b1f      	cmp	r3, #31
 8000866:	d80a      	bhi.n	800087e <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 8000868:	4b1e      	ldr	r3, [pc, #120]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	79fa      	ldrb	r2, [r7, #7]
 800086e:	2101      	movs	r1, #1
 8000870:	fa01 f202 	lsl.w	r2, r1, r2
 8000874:	4611      	mov	r1, r2
 8000876:	4a1b      	ldr	r2, [pc, #108]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 8000878:	430b      	orrs	r3, r1
 800087a:	6013      	str	r3, [r2, #0]
}
 800087c:	e025      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	2b1f      	cmp	r3, #31
 8000882:	d90f      	bls.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
 8000884:	79fb      	ldrb	r3, [r7, #7]
 8000886:	2b3f      	cmp	r3, #63	; 0x3f
 8000888:	d80c      	bhi.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 800088a:	4b17      	ldr	r3, [pc, #92]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	79fa      	ldrb	r2, [r7, #7]
 8000890:	f002 021f 	and.w	r2, r2, #31
 8000894:	2101      	movs	r1, #1
 8000896:	fa01 f202 	lsl.w	r2, r1, r2
 800089a:	4611      	mov	r1, r2
 800089c:	4a12      	ldr	r2, [pc, #72]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800089e:	430b      	orrs	r3, r1
 80008a0:	6013      	str	r3, [r2, #0]
 80008a2:	e012      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80008a4:	79fb      	ldrb	r3, [r7, #7]
 80008a6:	2b3f      	cmp	r3, #63	; 0x3f
 80008a8:	d90f      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b5f      	cmp	r3, #95	; 0x5f
 80008ae:	d80c      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80008b0:	4b0e      	ldr	r3, [pc, #56]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a0a      	ldr	r2, [pc, #40]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
}
 80008c8:	e7ff      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008ca:	bf00      	nop
 80008cc:	370c      	adds	r7, #12
 80008ce:	46bd      	mov	sp, r7
 80008d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	e000e100 	.word	0xe000e100
 80008dc:	e000e104 	.word	0xe000e104
 80008e0:	e000e108 	.word	0xe000e108
 80008e4:	e000e180 	.word	0xe000e180
 80008e8:	e000e184 	.word	0xe000e184
 80008ec:	e000e188 	.word	0xe000e188

080008f0 <GPIO_IRQPriorityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 80008f0:	b480      	push	{r7}
 80008f2:	b085      	sub	sp, #20
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	6039      	str	r1, [r7, #0]
 80008fa:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	089b      	lsrs	r3, r3, #2
 8000900:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber %4 ;
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	f003 0303 	and.w	r3, r3, #3
 8000908:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 800090a:	7bbb      	ldrb	r3, [r7, #14]
 800090c:	00db      	lsls	r3, r3, #3
 800090e:	b2db      	uxtb	r3, r3
 8000910:	3304      	adds	r3, #4
 8000912:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDR + iprx ) |=  ( IRQPriority << shift_amount );
 8000914:	7bfb      	ldrb	r3, [r7, #15]
 8000916:	009b      	lsls	r3, r3, #2
 8000918:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800091c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000920:	6819      	ldr	r1, [r3, #0]
 8000922:	7b7b      	ldrb	r3, [r7, #13]
 8000924:	683a      	ldr	r2, [r7, #0]
 8000926:	409a      	lsls	r2, r3
 8000928:	7bfb      	ldrb	r3, [r7, #15]
 800092a:	009b      	lsls	r3, r3, #2
 800092c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000930:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000934:	430a      	orrs	r2, r1
 8000936:	601a      	str	r2, [r3, #0]
}
 8000938:	bf00      	nop
 800093a:	3714      	adds	r7, #20
 800093c:	46bd      	mov	sp, r7
 800093e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000942:	4770      	bx	lr

08000944 <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000944:	b480      	push	{r7}
 8000946:	b083      	sub	sp, #12
 8000948:	af00      	add	r7, sp, #0
 800094a:	4603      	mov	r3, r0
 800094c:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 800094e:	4b0c      	ldr	r3, [pc, #48]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000950:	695b      	ldr	r3, [r3, #20]
 8000952:	79fa      	ldrb	r2, [r7, #7]
 8000954:	2101      	movs	r1, #1
 8000956:	fa01 f202 	lsl.w	r2, r1, r2
 800095a:	4013      	ands	r3, r2
 800095c:	2b00      	cmp	r3, #0
 800095e:	d009      	beq.n	8000974 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 8000960:	4b07      	ldr	r3, [pc, #28]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000962:	695b      	ldr	r3, [r3, #20]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	2101      	movs	r1, #1
 8000968:	fa01 f202 	lsl.w	r2, r1, r2
 800096c:	4611      	mov	r1, r2
 800096e:	4a04      	ldr	r2, [pc, #16]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000970:	430b      	orrs	r3, r1
 8000972:	6153      	str	r3, [r2, #20]
	}

}
 8000974:	bf00      	nop
 8000976:	370c      	adds	r7, #12
 8000978:	46bd      	mov	sp, r7
 800097a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800097e:	4770      	bx	lr
 8000980:	40013c00 	.word	0x40013c00

08000984 <delay>:
 */

#include"stm32f446xx.h"
#include<string.h>
void delay(void)
{
 8000984:	b480      	push	{r7}
 8000986:	b083      	sub	sp, #12
 8000988:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 800098a:	2300      	movs	r3, #0
 800098c:	607b      	str	r3, [r7, #4]
 800098e:	e002      	b.n	8000996 <delay+0x12>
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	3301      	adds	r3, #1
 8000994:	607b      	str	r3, [r7, #4]
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	4a04      	ldr	r2, [pc, #16]	; (80009ac <delay+0x28>)
 800099a:	4293      	cmp	r3, r2
 800099c:	d9f8      	bls.n	8000990 <delay+0xc>
}
 800099e:	bf00      	nop
 80009a0:	bf00      	nop
 80009a2:	370c      	adds	r7, #12
 80009a4:	46bd      	mov	sp, r7
 80009a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009aa:	4770      	bx	lr
 80009ac:	0007a11f 	.word	0x0007a11f

080009b0 <main>:
int main()
{
 80009b0:	b580      	push	{r7, lr}
 80009b2:	b086      	sub	sp, #24
 80009b4:	af00      	add	r7, sp, #0
	//LED PA5
	GPIO_Handle_t GpioLed;
	memset(&GpioLed,0,sizeof(GpioLed));
 80009b6:	f107 030c 	add.w	r3, r7, #12
 80009ba:	220c      	movs	r2, #12
 80009bc:	2100      	movs	r1, #0
 80009be:	4618      	mov	r0, r3
 80009c0:	f000 f871 	bl	8000aa6 <memset>
	GpioLed.pGPIOx = GPIOA;
 80009c4:	4b19      	ldr	r3, [pc, #100]	; (8000a2c <main+0x7c>)
 80009c6:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80009c8:	2305      	movs	r3, #5
 80009ca:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80009cc:	2301      	movs	r3, #1
 80009ce:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80009d0:	2302      	movs	r3, #2
 80009d2:	74bb      	strb	r3, [r7, #18]
	//GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80009d4:	2300      	movs	r3, #0
 80009d6:	74fb      	strb	r3, [r7, #19]
	GPIO_Init(&GpioLed);
 80009d8:	f107 030c 	add.w	r3, r7, #12
 80009dc:	4618      	mov	r0, r3
 80009de:	f7ff fc11 	bl	8000204 <GPIO_Init>


	//Button PC13
	GPIO_Handle_t GpioButton;
	memset(&GpioButton,0,sizeof(GpioButton));
 80009e2:	463b      	mov	r3, r7
 80009e4:	220c      	movs	r2, #12
 80009e6:	2100      	movs	r1, #0
 80009e8:	4618      	mov	r0, r3
 80009ea:	f000 f85c 	bl	8000aa6 <memset>
	GpioButton.pGPIOx = GPIOC;
 80009ee:	4b10      	ldr	r3, [pc, #64]	; (8000a30 <main+0x80>)
 80009f0:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80009f2:	230d      	movs	r3, #13
 80009f4:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80009f6:	2304      	movs	r3, #4
 80009f8:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80009fa:	2302      	movs	r3, #2
 80009fc:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
 80009fe:	2302      	movs	r3, #2
 8000a00:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(&GpioButton);
 8000a02:	463b      	mov	r3, r7
 8000a04:	4618      	mov	r0, r3
 8000a06:	f7ff fbfd 	bl	8000204 <GPIO_Init>


	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
 8000a0a:	210f      	movs	r1, #15
 8000a0c:	2028      	movs	r0, #40	; 0x28
 8000a0e:	f7ff ff6f 	bl	80008f0 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,ENABLE);
 8000a12:	2101      	movs	r1, #1
 8000a14:	2028      	movs	r0, #40	; 0x28
 8000a16:	f7ff fee5 	bl	80007e4 <GPIO_IRQInterruptConfig>
	while(1){
		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, DISABLE);
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	2105      	movs	r1, #5
 8000a1e:	4803      	ldr	r0, [pc, #12]	; (8000a2c <main+0x7c>)
 8000a20:	f7ff feba 	bl	8000798 <GPIO_WriteToOutputPin>
		delay();
 8000a24:	f7ff ffae 	bl	8000984 <delay>
		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, DISABLE);
 8000a28:	e7f7      	b.n	8000a1a <main+0x6a>
 8000a2a:	bf00      	nop
 8000a2c:	40020000 	.word	0x40020000
 8000a30:	40020800 	.word	0x40020800

08000a34 <EXTI15_10_IRQHandler>:
	}
}
void EXTI15_10_IRQHandler(void)
{
 8000a34:	b580      	push	{r7, lr}
 8000a36:	af00      	add	r7, sp, #0
   /// delay(); //200ms . wait till button de-bouncing gets over
	GPIO_IRQHandling(GPIO_PIN_NO_13); //clear the pending event from exti line
 8000a38:	200d      	movs	r0, #13
 8000a3a:	f7ff ff83 	bl	8000944 <GPIO_IRQHandling>
	GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, ENABLE);
 8000a3e:	2201      	movs	r2, #1
 8000a40:	2105      	movs	r1, #5
 8000a42:	4803      	ldr	r0, [pc, #12]	; (8000a50 <EXTI15_10_IRQHandler+0x1c>)
 8000a44:	f7ff fea8 	bl	8000798 <GPIO_WriteToOutputPin>
	delay();
 8000a48:	f7ff ff9c 	bl	8000984 <delay>
}
 8000a4c:	bf00      	nop
 8000a4e:	bd80      	pop	{r7, pc}
 8000a50:	40020000 	.word	0x40020000

08000a54 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a54:	480d      	ldr	r0, [pc, #52]	; (8000a8c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a56:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000a58:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a5c:	480c      	ldr	r0, [pc, #48]	; (8000a90 <LoopForever+0x6>)
  ldr r1, =_edata
 8000a5e:	490d      	ldr	r1, [pc, #52]	; (8000a94 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a60:	4a0d      	ldr	r2, [pc, #52]	; (8000a98 <LoopForever+0xe>)
  movs r3, #0
 8000a62:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a64:	e002      	b.n	8000a6c <LoopCopyDataInit>

08000a66 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a66:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a68:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a6a:	3304      	adds	r3, #4

08000a6c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a6c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a6e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a70:	d3f9      	bcc.n	8000a66 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a72:	4a0a      	ldr	r2, [pc, #40]	; (8000a9c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a74:	4c0a      	ldr	r4, [pc, #40]	; (8000aa0 <LoopForever+0x16>)
  movs r3, #0
 8000a76:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a78:	e001      	b.n	8000a7e <LoopFillZerobss>

08000a7a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a7a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a7c:	3204      	adds	r2, #4

08000a7e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a7e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a80:	d3fb      	bcc.n	8000a7a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000a82:	f000 f819 	bl	8000ab8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a86:	f7ff ff93 	bl	80009b0 <main>

08000a8a <LoopForever>:

LoopForever:
  b LoopForever
 8000a8a:	e7fe      	b.n	8000a8a <LoopForever>
  ldr   r0, =_estack
 8000a8c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000a90:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a94:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a98:	08000b20 	.word	0x08000b20
  ldr r2, =_sbss
 8000a9c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000aa0:	2000001c 	.word	0x2000001c

08000aa4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000aa4:	e7fe      	b.n	8000aa4 <ADC_IRQHandler>

08000aa6 <memset>:
 8000aa6:	4402      	add	r2, r0
 8000aa8:	4603      	mov	r3, r0
 8000aaa:	4293      	cmp	r3, r2
 8000aac:	d100      	bne.n	8000ab0 <memset+0xa>
 8000aae:	4770      	bx	lr
 8000ab0:	f803 1b01 	strb.w	r1, [r3], #1
 8000ab4:	e7f9      	b.n	8000aaa <memset+0x4>
	...

08000ab8 <__libc_init_array>:
 8000ab8:	b570      	push	{r4, r5, r6, lr}
 8000aba:	4d0d      	ldr	r5, [pc, #52]	; (8000af0 <__libc_init_array+0x38>)
 8000abc:	4c0d      	ldr	r4, [pc, #52]	; (8000af4 <__libc_init_array+0x3c>)
 8000abe:	1b64      	subs	r4, r4, r5
 8000ac0:	10a4      	asrs	r4, r4, #2
 8000ac2:	2600      	movs	r6, #0
 8000ac4:	42a6      	cmp	r6, r4
 8000ac6:	d109      	bne.n	8000adc <__libc_init_array+0x24>
 8000ac8:	4d0b      	ldr	r5, [pc, #44]	; (8000af8 <__libc_init_array+0x40>)
 8000aca:	4c0c      	ldr	r4, [pc, #48]	; (8000afc <__libc_init_array+0x44>)
 8000acc:	f000 f818 	bl	8000b00 <_init>
 8000ad0:	1b64      	subs	r4, r4, r5
 8000ad2:	10a4      	asrs	r4, r4, #2
 8000ad4:	2600      	movs	r6, #0
 8000ad6:	42a6      	cmp	r6, r4
 8000ad8:	d105      	bne.n	8000ae6 <__libc_init_array+0x2e>
 8000ada:	bd70      	pop	{r4, r5, r6, pc}
 8000adc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ae0:	4798      	blx	r3
 8000ae2:	3601      	adds	r6, #1
 8000ae4:	e7ee      	b.n	8000ac4 <__libc_init_array+0xc>
 8000ae6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aea:	4798      	blx	r3
 8000aec:	3601      	adds	r6, #1
 8000aee:	e7f2      	b.n	8000ad6 <__libc_init_array+0x1e>
 8000af0:	08000b18 	.word	0x08000b18
 8000af4:	08000b18 	.word	0x08000b18
 8000af8:	08000b18 	.word	0x08000b18
 8000afc:	08000b1c 	.word	0x08000b1c

08000b00 <_init>:
 8000b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b02:	bf00      	nop
 8000b04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b06:	bc08      	pop	{r3}
 8000b08:	469e      	mov	lr, r3
 8000b0a:	4770      	bx	lr

08000b0c <_fini>:
 8000b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b0e:	bf00      	nop
 8000b10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b12:	bc08      	pop	{r3}
 8000b14:	469e      	mov	lr, r3
 8000b16:	4770      	bx	lr
