
STM32_Drivers_Layer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005c0  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000784  0800078c  0001078c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000784  08000784  0001078c  2**0
                  CONTENTS
  4 .ARM          00000000  08000784  08000784  0001078c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000784  0800078c  0001078c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000784  08000784  00010784  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000788  08000788  00010788  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001078c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800078c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800078c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001078c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000107bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000087c  00000000  00000000  000107ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000277  00000000  00000000  0001107b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  000112f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000073  00000000  00000000  000113a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001903  00000000  00000000  00011413  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e5b  00000000  00000000  00012d16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000060d1  00000000  00000000  00013b71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001d0  00000000  00000000  00019c44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  00019e14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800076c 	.word	0x0800076c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	0800076c 	.word	0x0800076c

08000204 <GPIO_Init>:
 *
 * @Note              -  none
*/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	2101      	movs	r1, #1
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f8dc 	bl	80003d0 <GPIO_PeriClockControl>
	//Pin Configuration
	switch (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) {
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	795b      	ldrb	r3, [r3, #5]
 800021c:	2b06      	cmp	r3, #6
 800021e:	f200 80d0 	bhi.w	80003c2 <GPIO_Init+0x1be>
 8000222:	a201      	add	r2, pc, #4	; (adr r2, 8000228 <GPIO_Init+0x24>)
 8000224:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000228:	080002bd 	.word	0x080002bd
 800022c:	080002fb 	.word	0x080002fb
 8000230:	08000281 	.word	0x08000281
 8000234:	08000245 	.word	0x08000245
 8000238:	08000337 	.word	0x08000337
 800023c:	08000367 	.word	0x08000367
 8000240:	08000397 	.word	0x08000397
	case GPIO_MODE_ANALOG: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	791b      	ldrb	r3, [r3, #4]
 800024e:	005b      	lsls	r3, r3, #1
 8000250:	2103      	movs	r1, #3
 8000252:	fa01 f303 	lsl.w	r3, r1, r3
 8000256:	43db      	mvns	r3, r3
 8000258:	4619      	mov	r1, r3
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	400a      	ands	r2, r1
 8000260:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	681a      	ldr	r2, [r3, #0]
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	791b      	ldrb	r3, [r3, #4]
 800026c:	005b      	lsls	r3, r3, #1
 800026e:	2103      	movs	r1, #3
 8000270:	fa01 f303 	lsl.w	r3, r1, r3
 8000274:	4619      	mov	r1, r3
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	430a      	orrs	r2, r1
 800027c:	601a      	str	r2, [r3, #0]
		break;
 800027e:	e0a1      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_ALTFN: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	791b      	ldrb	r3, [r3, #4]
 800028a:	005b      	lsls	r3, r3, #1
 800028c:	2103      	movs	r1, #3
 800028e:	fa01 f303 	lsl.w	r3, r1, r3
 8000292:	43db      	mvns	r3, r3
 8000294:	4619      	mov	r1, r3
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	400a      	ands	r2, r1
 800029c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x2<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	681a      	ldr	r2, [r3, #0]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	791b      	ldrb	r3, [r3, #4]
 80002a8:	005b      	lsls	r3, r3, #1
 80002aa:	2102      	movs	r1, #2
 80002ac:	fa01 f303 	lsl.w	r3, r1, r3
 80002b0:	4619      	mov	r1, r3
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	430a      	orrs	r2, r1
 80002b8:	601a      	str	r2, [r3, #0]
		break;
 80002ba:	e083      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_IN:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	681a      	ldr	r2, [r3, #0]
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	791b      	ldrb	r3, [r3, #4]
 80002c6:	005b      	lsls	r3, r3, #1
 80002c8:	2103      	movs	r1, #3
 80002ca:	fa01 f303 	lsl.w	r3, r1, r3
 80002ce:	43db      	mvns	r3, r3
 80002d0:	4619      	mov	r1, r3
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	400a      	ands	r2, r1
 80002d8:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER &= ~(0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	681a      	ldr	r2, [r3, #0]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	791b      	ldrb	r3, [r3, #4]
 80002e4:	005b      	lsls	r3, r3, #1
 80002e6:	2101      	movs	r1, #1
 80002e8:	fa01 f303 	lsl.w	r3, r1, r3
 80002ec:	43db      	mvns	r3, r3
 80002ee:	4619      	mov	r1, r3
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	400a      	ands	r2, r1
 80002f6:	601a      	str	r2, [r3, #0]
		break;
 80002f8:	e064      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_OUT:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	681a      	ldr	r2, [r3, #0]
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	791b      	ldrb	r3, [r3, #4]
 8000304:	005b      	lsls	r3, r3, #1
 8000306:	2103      	movs	r1, #3
 8000308:	fa01 f303 	lsl.w	r3, r1, r3
 800030c:	43db      	mvns	r3, r3
 800030e:	4619      	mov	r1, r3
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	400a      	ands	r2, r1
 8000316:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	791b      	ldrb	r3, [r3, #4]
 8000322:	005b      	lsls	r3, r3, #1
 8000324:	2101      	movs	r1, #1
 8000326:	fa01 f303 	lsl.w	r3, r1, r3
 800032a:	4619      	mov	r1, r3
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	430a      	orrs	r2, r1
 8000332:	601a      	str	r2, [r3, #0]
		break;
 8000334:	e046      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_IT_FT:
	{
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000336:	4b25      	ldr	r3, [pc, #148]	; (80003cc <GPIO_Init+0x1c8>)
 8000338:	68db      	ldr	r3, [r3, #12]
 800033a:	687a      	ldr	r2, [r7, #4]
 800033c:	7912      	ldrb	r2, [r2, #4]
 800033e:	4611      	mov	r1, r2
 8000340:	2201      	movs	r2, #1
 8000342:	408a      	lsls	r2, r1
 8000344:	4611      	mov	r1, r2
 8000346:	4a21      	ldr	r2, [pc, #132]	; (80003cc <GPIO_Init+0x1c8>)
 8000348:	430b      	orrs	r3, r1
 800034a:	60d3      	str	r3, [r2, #12]
		EXTI->RTSR&=~(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));//Clearing Rising Intrupt line
 800034c:	4b1f      	ldr	r3, [pc, #124]	; (80003cc <GPIO_Init+0x1c8>)
 800034e:	689b      	ldr	r3, [r3, #8]
 8000350:	687a      	ldr	r2, [r7, #4]
 8000352:	7912      	ldrb	r2, [r2, #4]
 8000354:	4611      	mov	r1, r2
 8000356:	2201      	movs	r2, #1
 8000358:	408a      	lsls	r2, r1
 800035a:	43d2      	mvns	r2, r2
 800035c:	4611      	mov	r1, r2
 800035e:	4a1b      	ldr	r2, [pc, #108]	; (80003cc <GPIO_Init+0x1c8>)
 8000360:	400b      	ands	r3, r1
 8000362:	6093      	str	r3, [r2, #8]
		break;
 8000364:	e02e      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_IT_RT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000366:	4b19      	ldr	r3, [pc, #100]	; (80003cc <GPIO_Init+0x1c8>)
 8000368:	689b      	ldr	r3, [r3, #8]
 800036a:	687a      	ldr	r2, [r7, #4]
 800036c:	7912      	ldrb	r2, [r2, #4]
 800036e:	4611      	mov	r1, r2
 8000370:	2201      	movs	r2, #1
 8000372:	408a      	lsls	r2, r1
 8000374:	4611      	mov	r1, r2
 8000376:	4a15      	ldr	r2, [pc, #84]	; (80003cc <GPIO_Init+0x1c8>)
 8000378:	430b      	orrs	r3, r1
 800037a:	6093      	str	r3, [r2, #8]
		EXTI->FTSR&=~(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 800037c:	4b13      	ldr	r3, [pc, #76]	; (80003cc <GPIO_Init+0x1c8>)
 800037e:	68db      	ldr	r3, [r3, #12]
 8000380:	687a      	ldr	r2, [r7, #4]
 8000382:	7912      	ldrb	r2, [r2, #4]
 8000384:	4611      	mov	r1, r2
 8000386:	2201      	movs	r2, #1
 8000388:	408a      	lsls	r2, r1
 800038a:	43d2      	mvns	r2, r2
 800038c:	4611      	mov	r1, r2
 800038e:	4a0f      	ldr	r2, [pc, #60]	; (80003cc <GPIO_Init+0x1c8>)
 8000390:	400b      	ands	r3, r1
 8000392:	60d3      	str	r3, [r2, #12]
		break;
 8000394:	e016      	b.n	80003c4 <GPIO_Init+0x1c0>
	}
	case GPIO_MODE_IT_RFT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000396:	4b0d      	ldr	r3, [pc, #52]	; (80003cc <GPIO_Init+0x1c8>)
 8000398:	689b      	ldr	r3, [r3, #8]
 800039a:	687a      	ldr	r2, [r7, #4]
 800039c:	7912      	ldrb	r2, [r2, #4]
 800039e:	4611      	mov	r1, r2
 80003a0:	2201      	movs	r2, #1
 80003a2:	408a      	lsls	r2, r1
 80003a4:	4611      	mov	r1, r2
 80003a6:	4a09      	ldr	r2, [pc, #36]	; (80003cc <GPIO_Init+0x1c8>)
 80003a8:	430b      	orrs	r3, r1
 80003aa:	6093      	str	r3, [r2, #8]
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 80003ac:	4b07      	ldr	r3, [pc, #28]	; (80003cc <GPIO_Init+0x1c8>)
 80003ae:	68db      	ldr	r3, [r3, #12]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	7912      	ldrb	r2, [r2, #4]
 80003b4:	4611      	mov	r1, r2
 80003b6:	2201      	movs	r2, #1
 80003b8:	408a      	lsls	r2, r1
 80003ba:	4611      	mov	r1, r2
 80003bc:	4a03      	ldr	r2, [pc, #12]	; (80003cc <GPIO_Init+0x1c8>)
 80003be:	430b      	orrs	r3, r1
 80003c0:	60d3      	str	r3, [r2, #12]
	}
	default: {
		break;
 80003c2:	bf00      	nop
//	SYSCFG_PCLK_EN();
//	SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
//
//	//3 . enable the exti interrupt delivery using IMR
//	EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
}
 80003c4:	bf00      	nop
 80003c6:	3708      	adds	r7, #8
 80003c8:	46bd      	mov	sp, r7
 80003ca:	bd80      	pop	{r7, pc}
 80003cc:	40013c00 	.word	0x40013c00

080003d0 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80003d0:	b480      	push	{r7}
 80003d2:	b083      	sub	sp, #12
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
 80003d8:	460b      	mov	r3, r1
 80003da:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80003dc:	78fb      	ldrb	r3, [r7, #3]
 80003de:	2b01      	cmp	r3, #1
 80003e0:	d162      	bne.n	80004a8 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA) {
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a64      	ldr	r2, [pc, #400]	; (8000578 <GPIO_PeriClockControl+0x1a8>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80003ea:	4b64      	ldr	r3, [pc, #400]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ee:	4a63      	ldr	r2, [pc, #396]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80003f0:	f043 0301 	orr.w	r3, r3, #1
 80003f4:	6313      	str	r3, [r2, #48]	; 0x30
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
		}
	}

}
 80003f6:	e0b9      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a61      	ldr	r2, [pc, #388]	; (8000580 <GPIO_PeriClockControl+0x1b0>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000400:	4b5e      	ldr	r3, [pc, #376]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000404:	4a5d      	ldr	r2, [pc, #372]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000406:	f043 0302 	orr.w	r3, r3, #2
 800040a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040c:	e0ae      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a5c      	ldr	r2, [pc, #368]	; (8000584 <GPIO_PeriClockControl+0x1b4>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000416:	4b59      	ldr	r3, [pc, #356]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041a:	4a58      	ldr	r2, [pc, #352]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800041c:	f043 0304 	orr.w	r3, r3, #4
 8000420:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000422:	e0a3      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a58      	ldr	r2, [pc, #352]	; (8000588 <GPIO_PeriClockControl+0x1b8>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800042c:	4b53      	ldr	r3, [pc, #332]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a52      	ldr	r2, [pc, #328]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000432:	f043 0308 	orr.w	r3, r3, #8
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000438:	e098      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a53      	ldr	r2, [pc, #332]	; (800058c <GPIO_PeriClockControl+0x1bc>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000442:	4b4e      	ldr	r3, [pc, #312]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000446:	4a4d      	ldr	r2, [pc, #308]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000448:	f043 0310 	orr.w	r3, r3, #16
 800044c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044e:	e08d      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a4f      	ldr	r2, [pc, #316]	; (8000590 <GPIO_PeriClockControl+0x1c0>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d106      	bne.n	8000466 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000458:	4b48      	ldr	r3, [pc, #288]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a47      	ldr	r2, [pc, #284]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800045e:	f043 0320 	orr.w	r3, r3, #32
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000464:	e082      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a4a      	ldr	r2, [pc, #296]	; (8000594 <GPIO_PeriClockControl+0x1c4>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800046e:	4b43      	ldr	r3, [pc, #268]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000472:	4a42      	ldr	r2, [pc, #264]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000474:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000478:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047a:	e077      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a46      	ldr	r2, [pc, #280]	; (8000598 <GPIO_PeriClockControl+0x1c8>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d106      	bne.n	8000492 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000484:	4b3d      	ldr	r3, [pc, #244]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a3c      	ldr	r2, [pc, #240]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800048a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000490:	e06c      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4a41      	ldr	r2, [pc, #260]	; (800059c <GPIO_PeriClockControl+0x1cc>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d168      	bne.n	800056c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800049a:	4b38      	ldr	r3, [pc, #224]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800049c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049e:	4a37      	ldr	r2, [pc, #220]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a6:	e061      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	4a33      	ldr	r2, [pc, #204]	; (8000578 <GPIO_PeriClockControl+0x1a8>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d106      	bne.n	80004be <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80004b0:	4b32      	ldr	r3, [pc, #200]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b4:	4a31      	ldr	r2, [pc, #196]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004b6:	f023 0301 	bic.w	r3, r3, #1
 80004ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004bc:	e056      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4a2f      	ldr	r2, [pc, #188]	; (8000580 <GPIO_PeriClockControl+0x1b0>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d106      	bne.n	80004d4 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80004c6:	4b2d      	ldr	r3, [pc, #180]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ca:	4a2c      	ldr	r2, [pc, #176]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004cc:	f023 0302 	bic.w	r3, r3, #2
 80004d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d2:	e04b      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a2b      	ldr	r2, [pc, #172]	; (8000584 <GPIO_PeriClockControl+0x1b4>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d106      	bne.n	80004ea <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80004dc:	4b27      	ldr	r3, [pc, #156]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e0:	4a26      	ldr	r2, [pc, #152]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004e2:	f023 0304 	bic.w	r3, r3, #4
 80004e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004e8:	e040      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4a26      	ldr	r2, [pc, #152]	; (8000588 <GPIO_PeriClockControl+0x1b8>)
 80004ee:	4293      	cmp	r3, r2
 80004f0:	d106      	bne.n	8000500 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80004f2:	4b22      	ldr	r3, [pc, #136]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f6:	4a21      	ldr	r2, [pc, #132]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 80004f8:	f023 0308 	bic.w	r3, r3, #8
 80004fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004fe:	e035      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	4a22      	ldr	r2, [pc, #136]	; (800058c <GPIO_PeriClockControl+0x1bc>)
 8000504:	4293      	cmp	r3, r2
 8000506:	d106      	bne.n	8000516 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000508:	4b1c      	ldr	r3, [pc, #112]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800050a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800050c:	4a1b      	ldr	r2, [pc, #108]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800050e:	f023 0310 	bic.w	r3, r3, #16
 8000512:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000514:	e02a      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	4a1d      	ldr	r2, [pc, #116]	; (8000590 <GPIO_PeriClockControl+0x1c0>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d106      	bne.n	800052c <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800051e:	4b17      	ldr	r3, [pc, #92]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000520:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000522:	4a16      	ldr	r2, [pc, #88]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000524:	f023 0320 	bic.w	r3, r3, #32
 8000528:	6313      	str	r3, [r2, #48]	; 0x30
}
 800052a:	e01f      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	4a19      	ldr	r2, [pc, #100]	; (8000594 <GPIO_PeriClockControl+0x1c4>)
 8000530:	4293      	cmp	r3, r2
 8000532:	d106      	bne.n	8000542 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000534:	4b11      	ldr	r3, [pc, #68]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000538:	4a10      	ldr	r2, [pc, #64]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800053a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800053e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000540:	e014      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4a14      	ldr	r2, [pc, #80]	; (8000598 <GPIO_PeriClockControl+0x1c8>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d106      	bne.n	8000558 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800054a:	4b0c      	ldr	r3, [pc, #48]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 800054c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800054e:	4a0b      	ldr	r2, [pc, #44]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000550:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000554:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000556:	e009      	b.n	800056c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	4a10      	ldr	r2, [pc, #64]	; (800059c <GPIO_PeriClockControl+0x1cc>)
 800055c:	4293      	cmp	r3, r2
 800055e:	d105      	bne.n	800056c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000560:	4b06      	ldr	r3, [pc, #24]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000562:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000564:	4a05      	ldr	r2, [pc, #20]	; (800057c <GPIO_PeriClockControl+0x1ac>)
 8000566:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800056a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800056c:	bf00      	nop
 800056e:	370c      	adds	r7, #12
 8000570:	46bd      	mov	sp, r7
 8000572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000576:	4770      	bx	lr
 8000578:	40020000 	.word	0x40020000
 800057c:	40023800 	.word	0x40023800
 8000580:	40020400 	.word	0x40020400
 8000584:	40020800 	.word	0x40020800
 8000588:	40020c00 	.word	0x40020c00
 800058c:	40021000 	.word	0x40021000
 8000590:	40021400 	.word	0x40021400
 8000594:	40021800 	.word	0x40021800
 8000598:	40021c00 	.word	0x40021c00
 800059c:	40022000 	.word	0x40022000

080005a0 <GPIO_ReadFromInputPin>:
 * @Note              -

 */

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005a0:	b480      	push	{r7}
 80005a2:	b085      	sub	sp, #20
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	6078      	str	r0, [r7, #4]
 80005a8:	460b      	mov	r3, r1
 80005aa:	70fb      	strb	r3, [r7, #3]
	uint8_t data=(uint8_t)(((pGPIOx->IDR)>>PinNumber)&0x01);
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	691a      	ldr	r2, [r3, #16]
 80005b0:	78fb      	ldrb	r3, [r7, #3]
 80005b2:	fa22 f303 	lsr.w	r3, r2, r3
 80005b6:	b2db      	uxtb	r3, r3
 80005b8:	f003 0301 	and.w	r3, r3, #1
 80005bc:	73fb      	strb	r3, [r7, #15]
	return data;
 80005be:	7bfb      	ldrb	r3, [r7, #15]
}
 80005c0:	4618      	mov	r0, r3
 80005c2:	3714      	adds	r7, #20
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr

080005cc <GPIO_WriteToOutputPin>:
 *
 * @Note              -

 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	70fb      	strb	r3, [r7, #3]
 80005d8:	4613      	mov	r3, r2
 80005da:	70bb      	strb	r3, [r7, #2]
	if(Value==ENABLE)
 80005dc:	78bb      	ldrb	r3, [r7, #2]
 80005de:	2b01      	cmp	r3, #1
 80005e0:	d109      	bne.n	80005f6 <GPIO_WriteToOutputPin+0x2a>
	{
		 pGPIOx->ODR|=(1<<PinNumber);
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	695b      	ldr	r3, [r3, #20]
 80005e6:	78fa      	ldrb	r2, [r7, #3]
 80005e8:	2101      	movs	r1, #1
 80005ea:	fa01 f202 	lsl.w	r2, r1, r2
 80005ee:	431a      	orrs	r2, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	615a      	str	r2, [r3, #20]
		 pGPIOx->ODR&=~(1<<PinNumber);
	}



}
 80005f4:	e009      	b.n	800060a <GPIO_WriteToOutputPin+0x3e>
		 pGPIOx->ODR&=~(1<<PinNumber);
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	695b      	ldr	r3, [r3, #20]
 80005fa:	78fa      	ldrb	r2, [r7, #3]
 80005fc:	2101      	movs	r1, #1
 80005fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000602:	43d2      	mvns	r2, r2
 8000604:	401a      	ands	r2, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	615a      	str	r2, [r3, #20]
}
 800060a:	bf00      	nop
 800060c:	370c      	adds	r7, #12
 800060e:	46bd      	mov	sp, r7
 8000610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000614:	4770      	bx	lr
	...

08000618 <delay>:

#include <stdint.h>
#include"stm32f446xx.h"
#include<stdint.h>
void delay(void)
{
 8000618:	b480      	push	{r7}
 800061a:	b083      	sub	sp, #12
 800061c:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 800061e:	2300      	movs	r3, #0
 8000620:	607b      	str	r3, [r7, #4]
 8000622:	e002      	b.n	800062a <delay+0x12>
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	3301      	adds	r3, #1
 8000628:	607b      	str	r3, [r7, #4]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4a04      	ldr	r2, [pc, #16]	; (8000640 <delay+0x28>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d9f8      	bls.n	8000624 <delay+0xc>
}
 8000632:	bf00      	nop
 8000634:	bf00      	nop
 8000636:	370c      	adds	r7, #12
 8000638:	46bd      	mov	sp, r7
 800063a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063e:	4770      	bx	lr
 8000640:	0007a11f 	.word	0x0007a11f

08000644 <main>:

int main(void)
{
 8000644:	b580      	push	{r7, lr}
 8000646:	b086      	sub	sp, #24
 8000648:	af00      	add	r7, sp, #0
	/*
	 * Led PA5
	 */
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOA;
 800064a:	4b1f      	ldr	r3, [pc, #124]	; (80006c8 <main+0x84>)
 800064c:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800064e:	2305      	movs	r3, #5
 8000650:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000652:	2301      	movs	r3, #1
 8000654:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000656:	2302      	movs	r3, #2
 8000658:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800065a:	2301      	movs	r3, #1
 800065c:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800065e:	2300      	movs	r3, #0
 8000660:	74fb      	strb	r3, [r7, #19]
	GPIO_Init(&GpioLed);
 8000662:	f107 030c 	add.w	r3, r7, #12
 8000666:	4618      	mov	r0, r3
 8000668:	f7ff fdcc 	bl	8000204 <GPIO_Init>
	/*
	 * Button PC13
	 */
	GPIO_Handle_t GpioButton;
	GpioButton.pGPIOx = GPIOC;
 800066c:	4b17      	ldr	r3, [pc, #92]	; (80006cc <main+0x88>)
 800066e:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000670:	230d      	movs	r3, #13
 8000672:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000674:	2300      	movs	r3, #0
 8000676:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000678:	2302      	movs	r3, #2
 800067a:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800067c:	2300      	movs	r3, #0
 800067e:	723b      	strb	r3, [r7, #8]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000680:	2300      	movs	r3, #0
 8000682:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(&GpioButton);
 8000684:	463b      	mov	r3, r7
 8000686:	4618      	mov	r0, r3
 8000688:	f7ff fdbc 	bl	8000204 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)==1)
 800068c:	210d      	movs	r1, #13
 800068e:	480f      	ldr	r0, [pc, #60]	; (80006cc <main+0x88>)
 8000690:	f7ff ff86 	bl	80005a0 <GPIO_ReadFromInputPin>
 8000694:	4603      	mov	r3, r0
 8000696:	2b01      	cmp	r3, #1
 8000698:	d10e      	bne.n	80006b8 <main+0x74>
		{
		GPIO_WriteToOutputPin(GPIOA,GPIO_PIN_NO_5,ENABLE);
 800069a:	2201      	movs	r2, #1
 800069c:	2105      	movs	r1, #5
 800069e:	480a      	ldr	r0, [pc, #40]	; (80006c8 <main+0x84>)
 80006a0:	f7ff ff94 	bl	80005cc <GPIO_WriteToOutputPin>
		delay();
 80006a4:	f7ff ffb8 	bl	8000618 <delay>
		GPIO_WriteToOutputPin(GPIOA,GPIO_PIN_NO_5,DISABLE);
 80006a8:	2200      	movs	r2, #0
 80006aa:	2105      	movs	r1, #5
 80006ac:	4806      	ldr	r0, [pc, #24]	; (80006c8 <main+0x84>)
 80006ae:	f7ff ff8d 	bl	80005cc <GPIO_WriteToOutputPin>
		delay();
 80006b2:	f7ff ffb1 	bl	8000618 <delay>
 80006b6:	e7e9      	b.n	800068c <main+0x48>
		}else
		{
			GPIO_WriteToOutputPin(GPIOA,GPIO_PIN_NO_5,DISABLE);
 80006b8:	2200      	movs	r2, #0
 80006ba:	2105      	movs	r1, #5
 80006bc:	4802      	ldr	r0, [pc, #8]	; (80006c8 <main+0x84>)
 80006be:	f7ff ff85 	bl	80005cc <GPIO_WriteToOutputPin>
			delay();
 80006c2:	f7ff ffa9 	bl	8000618 <delay>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)==1)
 80006c6:	e7e1      	b.n	800068c <main+0x48>
 80006c8:	40020000 	.word	0x40020000
 80006cc:	40020800 	.word	0x40020800

080006d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006d0:	480d      	ldr	r0, [pc, #52]	; (8000708 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006d8:	480c      	ldr	r0, [pc, #48]	; (800070c <LoopForever+0x6>)
  ldr r1, =_edata
 80006da:	490d      	ldr	r1, [pc, #52]	; (8000710 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006dc:	4a0d      	ldr	r2, [pc, #52]	; (8000714 <LoopForever+0xe>)
  movs r3, #0
 80006de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006e0:	e002      	b.n	80006e8 <LoopCopyDataInit>

080006e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006e6:	3304      	adds	r3, #4

080006e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006ec:	d3f9      	bcc.n	80006e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ee:	4a0a      	ldr	r2, [pc, #40]	; (8000718 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006f0:	4c0a      	ldr	r4, [pc, #40]	; (800071c <LoopForever+0x16>)
  movs r3, #0
 80006f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006f4:	e001      	b.n	80006fa <LoopFillZerobss>

080006f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006f8:	3204      	adds	r2, #4

080006fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006fc:	d3fb      	bcc.n	80006f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006fe:	f000 f811 	bl	8000724 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000702:	f7ff ff9f 	bl	8000644 <main>

08000706 <LoopForever>:

LoopForever:
  b LoopForever
 8000706:	e7fe      	b.n	8000706 <LoopForever>
  ldr   r0, =_estack
 8000708:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800070c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000710:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000714:	0800078c 	.word	0x0800078c
  ldr r2, =_sbss
 8000718:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800071c:	2000001c 	.word	0x2000001c

08000720 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000720:	e7fe      	b.n	8000720 <ADC_IRQHandler>
	...

08000724 <__libc_init_array>:
 8000724:	b570      	push	{r4, r5, r6, lr}
 8000726:	4d0d      	ldr	r5, [pc, #52]	; (800075c <__libc_init_array+0x38>)
 8000728:	4c0d      	ldr	r4, [pc, #52]	; (8000760 <__libc_init_array+0x3c>)
 800072a:	1b64      	subs	r4, r4, r5
 800072c:	10a4      	asrs	r4, r4, #2
 800072e:	2600      	movs	r6, #0
 8000730:	42a6      	cmp	r6, r4
 8000732:	d109      	bne.n	8000748 <__libc_init_array+0x24>
 8000734:	4d0b      	ldr	r5, [pc, #44]	; (8000764 <__libc_init_array+0x40>)
 8000736:	4c0c      	ldr	r4, [pc, #48]	; (8000768 <__libc_init_array+0x44>)
 8000738:	f000 f818 	bl	800076c <_init>
 800073c:	1b64      	subs	r4, r4, r5
 800073e:	10a4      	asrs	r4, r4, #2
 8000740:	2600      	movs	r6, #0
 8000742:	42a6      	cmp	r6, r4
 8000744:	d105      	bne.n	8000752 <__libc_init_array+0x2e>
 8000746:	bd70      	pop	{r4, r5, r6, pc}
 8000748:	f855 3b04 	ldr.w	r3, [r5], #4
 800074c:	4798      	blx	r3
 800074e:	3601      	adds	r6, #1
 8000750:	e7ee      	b.n	8000730 <__libc_init_array+0xc>
 8000752:	f855 3b04 	ldr.w	r3, [r5], #4
 8000756:	4798      	blx	r3
 8000758:	3601      	adds	r6, #1
 800075a:	e7f2      	b.n	8000742 <__libc_init_array+0x1e>
 800075c:	08000784 	.word	0x08000784
 8000760:	08000784 	.word	0x08000784
 8000764:	08000784 	.word	0x08000784
 8000768:	08000788 	.word	0x08000788

0800076c <_init>:
 800076c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800076e:	bf00      	nop
 8000770:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000772:	bc08      	pop	{r3}
 8000774:	469e      	mov	lr, r3
 8000776:	4770      	bx	lr

08000778 <_fini>:
 8000778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800077a:	bf00      	nop
 800077c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800077e:	bc08      	pop	{r3}
 8000780:	469e      	mov	lr, r3
 8000782:	4770      	bx	lr
