
STM32_Drivers_Layer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08008000  08008000  00008000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000094c  080081c4  080081c4  000081c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08008b10  08008b18  00008b18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08008b10  08008b10  00008b18  2**0
                  CONTENTS
  4 .ARM          00000000  08008b10  08008b10  00008b18  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008b10  08008b18  00008b18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008b10  08008b10  00008b10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008b14  08008b14  00008b14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00008b18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08008b18  00010000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08008b18  0001001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00008b18  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00008b48  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a5b  00000000  00000000  00008b8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002a6  00000000  00000000  000095e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00009890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00009958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000a28  00000000  00000000  000099e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000147f  00000000  00000000  0000a40c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009e56  00000000  00000000  0000b88b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  000156e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  0001596c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080081c4 <__do_global_dtors_aux>:
 80081c4:	b510      	push	{r4, lr}
 80081c6:	4c05      	ldr	r4, [pc, #20]	; (80081dc <__do_global_dtors_aux+0x18>)
 80081c8:	7823      	ldrb	r3, [r4, #0]
 80081ca:	b933      	cbnz	r3, 80081da <__do_global_dtors_aux+0x16>
 80081cc:	4b04      	ldr	r3, [pc, #16]	; (80081e0 <__do_global_dtors_aux+0x1c>)
 80081ce:	b113      	cbz	r3, 80081d6 <__do_global_dtors_aux+0x12>
 80081d0:	4804      	ldr	r0, [pc, #16]	; (80081e4 <__do_global_dtors_aux+0x20>)
 80081d2:	f3af 8000 	nop.w
 80081d6:	2301      	movs	r3, #1
 80081d8:	7023      	strb	r3, [r4, #0]
 80081da:	bd10      	pop	{r4, pc}
 80081dc:	20000000 	.word	0x20000000
 80081e0:	00000000 	.word	0x00000000
 80081e4:	08008af8 	.word	0x08008af8

080081e8 <frame_dummy>:
 80081e8:	b508      	push	{r3, lr}
 80081ea:	4b03      	ldr	r3, [pc, #12]	; (80081f8 <frame_dummy+0x10>)
 80081ec:	b11b      	cbz	r3, 80081f6 <frame_dummy+0xe>
 80081ee:	4903      	ldr	r1, [pc, #12]	; (80081fc <frame_dummy+0x14>)
 80081f0:	4803      	ldr	r0, [pc, #12]	; (8008200 <frame_dummy+0x18>)
 80081f2:	f3af 8000 	nop.w
 80081f6:	bd08      	pop	{r3, pc}
 80081f8:	00000000 	.word	0x00000000
 80081fc:	20000004 	.word	0x20000004
 8008200:	08008af8 	.word	0x08008af8

08008204 <GPIO_Init>:
 *
 * @Note              -  none
*/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8008204:	b590      	push	{r4, r7, lr}
 8008206:	b085      	sub	sp, #20
 8008208:	af00      	add	r7, sp, #0
 800820a:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0;
 800820c:	2300      	movs	r3, #0
 800820e:	60fb      	str	r3, [r7, #12]
	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	681b      	ldr	r3, [r3, #0]
 8008214:	2101      	movs	r1, #1
 8008216:	4618      	mov	r0, r3
 8008218:	f000 f9d2 	bl	80085c0 <GPIO_PeriClockControl>

	//Pin Configuration
	switch (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) {
 800821c:	687b      	ldr	r3, [r7, #4]
 800821e:	795b      	ldrb	r3, [r3, #5]
 8008220:	2b06      	cmp	r3, #6
 8008222:	f200 80d0 	bhi.w	80083c6 <GPIO_Init+0x1c2>
 8008226:	a201      	add	r2, pc, #4	; (adr r2, 800822c <GPIO_Init+0x28>)
 8008228:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800822c:	080082c1 	.word	0x080082c1
 8008230:	080082ff 	.word	0x080082ff
 8008234:	08008285 	.word	0x08008285
 8008238:	08008249 	.word	0x08008249
 800823c:	0800833b 	.word	0x0800833b
 8008240:	0800836b 	.word	0x0800836b
 8008244:	0800839b 	.word	0x0800839b
	case GPIO_MODE_ANALOG: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	681b      	ldr	r3, [r3, #0]
 800824c:	681a      	ldr	r2, [r3, #0]
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	791b      	ldrb	r3, [r3, #4]
 8008252:	005b      	lsls	r3, r3, #1
 8008254:	2103      	movs	r1, #3
 8008256:	fa01 f303 	lsl.w	r3, r1, r3
 800825a:	43db      	mvns	r3, r3
 800825c:	4619      	mov	r1, r3
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	681b      	ldr	r3, [r3, #0]
 8008262:	400a      	ands	r2, r1
 8008264:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	681b      	ldr	r3, [r3, #0]
 800826a:	681a      	ldr	r2, [r3, #0]
 800826c:	687b      	ldr	r3, [r7, #4]
 800826e:	791b      	ldrb	r3, [r3, #4]
 8008270:	005b      	lsls	r3, r3, #1
 8008272:	2103      	movs	r1, #3
 8008274:	fa01 f303 	lsl.w	r3, r1, r3
 8008278:	4619      	mov	r1, r3
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	430a      	orrs	r2, r1
 8008280:	601a      	str	r2, [r3, #0]
		break;
 8008282:	e0a1      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_ALTFN: {
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 8008284:	687b      	ldr	r3, [r7, #4]
 8008286:	681b      	ldr	r3, [r3, #0]
 8008288:	681a      	ldr	r2, [r3, #0]
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	791b      	ldrb	r3, [r3, #4]
 800828e:	005b      	lsls	r3, r3, #1
 8008290:	2103      	movs	r1, #3
 8008292:	fa01 f303 	lsl.w	r3, r1, r3
 8008296:	43db      	mvns	r3, r3
 8008298:	4619      	mov	r1, r3
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	681b      	ldr	r3, [r3, #0]
 800829e:	400a      	ands	r2, r1
 80082a0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x2<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	681b      	ldr	r3, [r3, #0]
 80082a6:	681a      	ldr	r2, [r3, #0]
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	791b      	ldrb	r3, [r3, #4]
 80082ac:	005b      	lsls	r3, r3, #1
 80082ae:	2102      	movs	r1, #2
 80082b0:	fa01 f303 	lsl.w	r3, r1, r3
 80082b4:	4619      	mov	r1, r3
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	681b      	ldr	r3, [r3, #0]
 80082ba:	430a      	orrs	r2, r1
 80082bc:	601a      	str	r2, [r3, #0]
		break;
 80082be:	e083      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IN:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	681b      	ldr	r3, [r3, #0]
 80082c4:	681a      	ldr	r2, [r3, #0]
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	791b      	ldrb	r3, [r3, #4]
 80082ca:	005b      	lsls	r3, r3, #1
 80082cc:	2103      	movs	r1, #3
 80082ce:	fa01 f303 	lsl.w	r3, r1, r3
 80082d2:	43db      	mvns	r3, r3
 80082d4:	4619      	mov	r1, r3
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	681b      	ldr	r3, [r3, #0]
 80082da:	400a      	ands	r2, r1
 80082dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER &= ~(0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80082de:	687b      	ldr	r3, [r7, #4]
 80082e0:	681b      	ldr	r3, [r3, #0]
 80082e2:	681a      	ldr	r2, [r3, #0]
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	791b      	ldrb	r3, [r3, #4]
 80082e8:	005b      	lsls	r3, r3, #1
 80082ea:	2101      	movs	r1, #1
 80082ec:	fa01 f303 	lsl.w	r3, r1, r3
 80082f0:	43db      	mvns	r3, r3
 80082f2:	4619      	mov	r1, r3
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	400a      	ands	r2, r1
 80082fa:	601a      	str	r2, [r3, #0]
		break;
 80082fc:	e064      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_OUT:
	{
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); // Clearing the position
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	681b      	ldr	r3, [r3, #0]
 8008302:	681a      	ldr	r2, [r3, #0]
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	791b      	ldrb	r3, [r3, #4]
 8008308:	005b      	lsls	r3, r3, #1
 800830a:	2103      	movs	r1, #3
 800830c:	fa01 f303 	lsl.w	r3, r1, r3
 8008310:	43db      	mvns	r3, r3
 8008312:	4619      	mov	r1, r3
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	681b      	ldr	r3, [r3, #0]
 8008318:	400a      	ands	r2, r1
 800831a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (0x1<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	681a      	ldr	r2, [r3, #0]
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	791b      	ldrb	r3, [r3, #4]
 8008326:	005b      	lsls	r3, r3, #1
 8008328:	2101      	movs	r1, #1
 800832a:	fa01 f303 	lsl.w	r3, r1, r3
 800832e:	4619      	mov	r1, r3
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	430a      	orrs	r2, r1
 8008336:	601a      	str	r2, [r3, #0]
		break;
 8008338:	e046      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_FT:
	{
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800833a:	4b95      	ldr	r3, [pc, #596]	; (8008590 <GPIO_Init+0x38c>)
 800833c:	68db      	ldr	r3, [r3, #12]
 800833e:	687a      	ldr	r2, [r7, #4]
 8008340:	7912      	ldrb	r2, [r2, #4]
 8008342:	4611      	mov	r1, r2
 8008344:	2201      	movs	r2, #1
 8008346:	408a      	lsls	r2, r1
 8008348:	4611      	mov	r1, r2
 800834a:	4a91      	ldr	r2, [pc, #580]	; (8008590 <GPIO_Init+0x38c>)
 800834c:	430b      	orrs	r3, r1
 800834e:	60d3      	str	r3, [r2, #12]
		EXTI->RTSR&=~(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));//Clearing Rising Intrupt line
 8008350:	4b8f      	ldr	r3, [pc, #572]	; (8008590 <GPIO_Init+0x38c>)
 8008352:	689b      	ldr	r3, [r3, #8]
 8008354:	687a      	ldr	r2, [r7, #4]
 8008356:	7912      	ldrb	r2, [r2, #4]
 8008358:	4611      	mov	r1, r2
 800835a:	2201      	movs	r2, #1
 800835c:	408a      	lsls	r2, r1
 800835e:	43d2      	mvns	r2, r2
 8008360:	4611      	mov	r1, r2
 8008362:	4a8b      	ldr	r2, [pc, #556]	; (8008590 <GPIO_Init+0x38c>)
 8008364:	400b      	ands	r3, r1
 8008366:	6093      	str	r3, [r2, #8]
		break;
 8008368:	e02e      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_RT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800836a:	4b89      	ldr	r3, [pc, #548]	; (8008590 <GPIO_Init+0x38c>)
 800836c:	689b      	ldr	r3, [r3, #8]
 800836e:	687a      	ldr	r2, [r7, #4]
 8008370:	7912      	ldrb	r2, [r2, #4]
 8008372:	4611      	mov	r1, r2
 8008374:	2201      	movs	r2, #1
 8008376:	408a      	lsls	r2, r1
 8008378:	4611      	mov	r1, r2
 800837a:	4a85      	ldr	r2, [pc, #532]	; (8008590 <GPIO_Init+0x38c>)
 800837c:	430b      	orrs	r3, r1
 800837e:	6093      	str	r3, [r2, #8]
		EXTI->FTSR&=~(0x01<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 8008380:	4b83      	ldr	r3, [pc, #524]	; (8008590 <GPIO_Init+0x38c>)
 8008382:	68db      	ldr	r3, [r3, #12]
 8008384:	687a      	ldr	r2, [r7, #4]
 8008386:	7912      	ldrb	r2, [r2, #4]
 8008388:	4611      	mov	r1, r2
 800838a:	2201      	movs	r2, #1
 800838c:	408a      	lsls	r2, r1
 800838e:	43d2      	mvns	r2, r2
 8008390:	4611      	mov	r1, r2
 8008392:	4a7f      	ldr	r2, [pc, #508]	; (8008590 <GPIO_Init+0x38c>)
 8008394:	400b      	ands	r3, r1
 8008396:	60d3      	str	r3, [r2, #12]
		break;
 8008398:	e016      	b.n	80083c8 <GPIO_Init+0x1c4>
	}
	case GPIO_MODE_IT_RFT:
	{
		EXTI->RTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800839a:	4b7d      	ldr	r3, [pc, #500]	; (8008590 <GPIO_Init+0x38c>)
 800839c:	689b      	ldr	r3, [r3, #8]
 800839e:	687a      	ldr	r2, [r7, #4]
 80083a0:	7912      	ldrb	r2, [r2, #4]
 80083a2:	4611      	mov	r1, r2
 80083a4:	2201      	movs	r2, #1
 80083a6:	408a      	lsls	r2, r1
 80083a8:	4611      	mov	r1, r2
 80083aa:	4a79      	ldr	r2, [pc, #484]	; (8008590 <GPIO_Init+0x38c>)
 80083ac:	430b      	orrs	r3, r1
 80083ae:	6093      	str	r3, [r2, #8]
		EXTI->FTSR|=(0x1<< ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));// Clearing the falling intrupt line
 80083b0:	4b77      	ldr	r3, [pc, #476]	; (8008590 <GPIO_Init+0x38c>)
 80083b2:	68db      	ldr	r3, [r3, #12]
 80083b4:	687a      	ldr	r2, [r7, #4]
 80083b6:	7912      	ldrb	r2, [r2, #4]
 80083b8:	4611      	mov	r1, r2
 80083ba:	2201      	movs	r2, #1
 80083bc:	408a      	lsls	r2, r1
 80083be:	4611      	mov	r1, r2
 80083c0:	4a73      	ldr	r2, [pc, #460]	; (8008590 <GPIO_Init+0x38c>)
 80083c2:	430b      	orrs	r3, r1
 80083c4:	60d3      	str	r3, [r2, #12]
	}
	default: {
		break;
 80083c6:	bf00      	nop
	}

	}
	//2. configure the speed

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	799b      	ldrb	r3, [r3, #6]
 80083cc:	461a      	mov	r2, r3
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	791b      	ldrb	r3, [r3, #4]
 80083d2:	005b      	lsls	r3, r3, #1
 80083d4:	fa02 f303 	lsl.w	r3, r2, r3
 80083d8:	60fb      	str	r3, [r7, #12]
	(pGPIOHandle->pGPIOx->OSPEEDR) &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	681b      	ldr	r3, [r3, #0]
 80083de:	689a      	ldr	r2, [r3, #8]
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	791b      	ldrb	r3, [r3, #4]
 80083e4:	005b      	lsls	r3, r3, #1
 80083e6:	2103      	movs	r1, #3
 80083e8:	fa01 f303 	lsl.w	r3, r1, r3
 80083ec:	43db      	mvns	r3, r3
 80083ee:	4619      	mov	r1, r3
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	681b      	ldr	r3, [r3, #0]
 80083f4:	400a      	ands	r2, r1
 80083f6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	6899      	ldr	r1, [r3, #8]
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	68fa      	ldr	r2, [r7, #12]
 8008404:	430a      	orrs	r2, r1
 8008406:	609a      	str	r2, [r3, #8]

	//Pull Push Configuration
	temp=0;
 8008408:	2300      	movs	r3, #0
 800840a:	60fb      	str	r3, [r7, #12]
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	79db      	ldrb	r3, [r3, #7]
 8008410:	461a      	mov	r2, r3
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	791b      	ldrb	r3, [r3, #4]
 8008416:	005b      	lsls	r3, r3, #1
 8008418:	fa02 f303 	lsl.w	r3, r2, r3
 800841c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR|= ~(0x3<< (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	68da      	ldr	r2, [r3, #12]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	791b      	ldrb	r3, [r3, #4]
 8008428:	005b      	lsls	r3, r3, #1
 800842a:	2103      	movs	r1, #3
 800842c:	fa01 f303 	lsl.w	r3, r1, r3
 8008430:	43db      	mvns	r3, r3
 8008432:	4619      	mov	r1, r3
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	430a      	orrs	r2, r1
 800843a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR|=temp;
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	68d9      	ldr	r1, [r3, #12]
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	681b      	ldr	r3, [r3, #0]
 8008446:	68fa      	ldr	r2, [r7, #12]
 8008448:	430a      	orrs	r2, r1
 800844a:	60da      	str	r2, [r3, #12]
//	pGPIOHandle->pGPIOx->OTYPER|=temp;
//
	//Alternative Functionality Mode
//	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode==GPIO_MODE_ALTFN)
//	{
		pGPIOHandle->pGPIOx->AFR[pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8]&=~(0xF<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8)));
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	681b      	ldr	r3, [r3, #0]
 8008450:	687a      	ldr	r2, [r7, #4]
 8008452:	7912      	ldrb	r2, [r2, #4]
 8008454:	08d2      	lsrs	r2, r2, #3
 8008456:	b2d0      	uxtb	r0, r2
 8008458:	4602      	mov	r2, r0
 800845a:	3208      	adds	r2, #8
 800845c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	791b      	ldrb	r3, [r3, #4]
 8008464:	f003 0307 	and.w	r3, r3, #7
 8008468:	009b      	lsls	r3, r3, #2
 800846a:	210f      	movs	r1, #15
 800846c:	fa01 f303 	lsl.w	r3, r1, r3
 8008470:	43db      	mvns	r3, r3
 8008472:	4619      	mov	r1, r3
 8008474:	687b      	ldr	r3, [r7, #4]
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	4011      	ands	r1, r2
 800847a:	f100 0208 	add.w	r2, r0, #8
 800847e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8]|=(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode)<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8));
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	681b      	ldr	r3, [r3, #0]
 8008486:	687a      	ldr	r2, [r7, #4]
 8008488:	7912      	ldrb	r2, [r2, #4]
 800848a:	08d2      	lsrs	r2, r2, #3
 800848c:	b2d1      	uxtb	r1, r2
 800848e:	460a      	mov	r2, r1
 8008490:	3208      	adds	r2, #8
 8008492:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	7a5b      	ldrb	r3, [r3, #9]
 800849a:	4618      	mov	r0, r3
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	791b      	ldrb	r3, [r3, #4]
 80084a0:	f003 0307 	and.w	r3, r3, #7
 80084a4:	009b      	lsls	r3, r3, #2
 80084a6:	fa00 f303 	lsl.w	r3, r0, r3
 80084aa:	461c      	mov	r4, r3
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	681b      	ldr	r3, [r3, #0]
 80084b0:	4608      	mov	r0, r1
 80084b2:	ea42 0104 	orr.w	r1, r2, r4
 80084b6:	f100 0208 	add.w	r2, r0, #8
 80084ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
//	}
	//2. configure the GPIO port selection in SYSCFG_EXTICR
	uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	791b      	ldrb	r3, [r3, #4]
 80084c2:	089b      	lsrs	r3, r3, #2
 80084c4:	72fb      	strb	r3, [r7, #11]
	uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	791b      	ldrb	r3, [r3, #4]
 80084ca:	f003 0303 	and.w	r3, r3, #3
 80084ce:	72bb      	strb	r3, [r7, #10]
	uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	4a2f      	ldr	r2, [pc, #188]	; (8008594 <GPIO_Init+0x390>)
 80084d6:	4293      	cmp	r3, r2
 80084d8:	d039      	beq.n	800854e <GPIO_Init+0x34a>
 80084da:	687b      	ldr	r3, [r7, #4]
 80084dc:	681b      	ldr	r3, [r3, #0]
 80084de:	4a2e      	ldr	r2, [pc, #184]	; (8008598 <GPIO_Init+0x394>)
 80084e0:	4293      	cmp	r3, r2
 80084e2:	d032      	beq.n	800854a <GPIO_Init+0x346>
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	4a2c      	ldr	r2, [pc, #176]	; (800859c <GPIO_Init+0x398>)
 80084ea:	4293      	cmp	r3, r2
 80084ec:	d02b      	beq.n	8008546 <GPIO_Init+0x342>
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	681b      	ldr	r3, [r3, #0]
 80084f2:	4a2b      	ldr	r2, [pc, #172]	; (80085a0 <GPIO_Init+0x39c>)
 80084f4:	4293      	cmp	r3, r2
 80084f6:	d024      	beq.n	8008542 <GPIO_Init+0x33e>
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	681b      	ldr	r3, [r3, #0]
 80084fc:	4a29      	ldr	r2, [pc, #164]	; (80085a4 <GPIO_Init+0x3a0>)
 80084fe:	4293      	cmp	r3, r2
 8008500:	d01d      	beq.n	800853e <GPIO_Init+0x33a>
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	4a28      	ldr	r2, [pc, #160]	; (80085a8 <GPIO_Init+0x3a4>)
 8008508:	4293      	cmp	r3, r2
 800850a:	d016      	beq.n	800853a <GPIO_Init+0x336>
 800850c:	687b      	ldr	r3, [r7, #4]
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	4a26      	ldr	r2, [pc, #152]	; (80085ac <GPIO_Init+0x3a8>)
 8008512:	4293      	cmp	r3, r2
 8008514:	d00f      	beq.n	8008536 <GPIO_Init+0x332>
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	681b      	ldr	r3, [r3, #0]
 800851a:	4a25      	ldr	r2, [pc, #148]	; (80085b0 <GPIO_Init+0x3ac>)
 800851c:	4293      	cmp	r3, r2
 800851e:	d008      	beq.n	8008532 <GPIO_Init+0x32e>
 8008520:	687b      	ldr	r3, [r7, #4]
 8008522:	681b      	ldr	r3, [r3, #0]
 8008524:	4a23      	ldr	r2, [pc, #140]	; (80085b4 <GPIO_Init+0x3b0>)
 8008526:	4293      	cmp	r3, r2
 8008528:	d101      	bne.n	800852e <GPIO_Init+0x32a>
 800852a:	2308      	movs	r3, #8
 800852c:	e010      	b.n	8008550 <GPIO_Init+0x34c>
 800852e:	2300      	movs	r3, #0
 8008530:	e00e      	b.n	8008550 <GPIO_Init+0x34c>
 8008532:	2307      	movs	r3, #7
 8008534:	e00c      	b.n	8008550 <GPIO_Init+0x34c>
 8008536:	2306      	movs	r3, #6
 8008538:	e00a      	b.n	8008550 <GPIO_Init+0x34c>
 800853a:	2305      	movs	r3, #5
 800853c:	e008      	b.n	8008550 <GPIO_Init+0x34c>
 800853e:	2304      	movs	r3, #4
 8008540:	e006      	b.n	8008550 <GPIO_Init+0x34c>
 8008542:	2303      	movs	r3, #3
 8008544:	e004      	b.n	8008550 <GPIO_Init+0x34c>
 8008546:	2302      	movs	r3, #2
 8008548:	e002      	b.n	8008550 <GPIO_Init+0x34c>
 800854a:	2301      	movs	r3, #1
 800854c:	e000      	b.n	8008550 <GPIO_Init+0x34c>
 800854e:	2300      	movs	r3, #0
 8008550:	727b      	strb	r3, [r7, #9]
	SYSCFG_PCLK_EN();
 8008552:	4b19      	ldr	r3, [pc, #100]	; (80085b8 <GPIO_Init+0x3b4>)
 8008554:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008556:	4a18      	ldr	r2, [pc, #96]	; (80085b8 <GPIO_Init+0x3b4>)
 8008558:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800855c:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 800855e:	7a7a      	ldrb	r2, [r7, #9]
 8008560:	7abb      	ldrb	r3, [r7, #10]
 8008562:	009b      	lsls	r3, r3, #2
 8008564:	fa02 f103 	lsl.w	r1, r2, r3
 8008568:	4a14      	ldr	r2, [pc, #80]	; (80085bc <GPIO_Init+0x3b8>)
 800856a:	7afb      	ldrb	r3, [r7, #11]
 800856c:	3302      	adds	r3, #2
 800856e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	//3 . enable the exti interrupt delivery using IMR
	EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8008572:	4b07      	ldr	r3, [pc, #28]	; (8008590 <GPIO_Init+0x38c>)
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	687a      	ldr	r2, [r7, #4]
 8008578:	7912      	ldrb	r2, [r2, #4]
 800857a:	4611      	mov	r1, r2
 800857c:	2201      	movs	r2, #1
 800857e:	408a      	lsls	r2, r1
 8008580:	4611      	mov	r1, r2
 8008582:	4a03      	ldr	r2, [pc, #12]	; (8008590 <GPIO_Init+0x38c>)
 8008584:	430b      	orrs	r3, r1
 8008586:	6013      	str	r3, [r2, #0]
}
 8008588:	bf00      	nop
 800858a:	3714      	adds	r7, #20
 800858c:	46bd      	mov	sp, r7
 800858e:	bd90      	pop	{r4, r7, pc}
 8008590:	40013c00 	.word	0x40013c00
 8008594:	40020000 	.word	0x40020000
 8008598:	40020400 	.word	0x40020400
 800859c:	40020800 	.word	0x40020800
 80085a0:	40020c00 	.word	0x40020c00
 80085a4:	40021000 	.word	0x40021000
 80085a8:	40021400 	.word	0x40021400
 80085ac:	40021800 	.word	0x40021800
 80085b0:	40021c00 	.word	0x40021c00
 80085b4:	40022000 	.word	0x40022000
 80085b8:	40023800 	.word	0x40023800
 80085bc:	40013800 	.word	0x40013800

080085c0 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80085c0:	b480      	push	{r7}
 80085c2:	b083      	sub	sp, #12
 80085c4:	af00      	add	r7, sp, #0
 80085c6:	6078      	str	r0, [r7, #4]
 80085c8:	460b      	mov	r3, r1
 80085ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80085cc:	78fb      	ldrb	r3, [r7, #3]
 80085ce:	2b01      	cmp	r3, #1
 80085d0:	d162      	bne.n	8008698 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA) {
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	4a64      	ldr	r2, [pc, #400]	; (8008768 <GPIO_PeriClockControl+0x1a8>)
 80085d6:	4293      	cmp	r3, r2
 80085d8:	d106      	bne.n	80085e8 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80085da:	4b64      	ldr	r3, [pc, #400]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80085dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80085de:	4a63      	ldr	r2, [pc, #396]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80085e0:	f043 0301 	orr.w	r3, r3, #1
 80085e4:	6313      	str	r3, [r2, #48]	; 0x30
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
		}
	}

}
 80085e6:	e0b9      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80085e8:	687b      	ldr	r3, [r7, #4]
 80085ea:	4a61      	ldr	r2, [pc, #388]	; (8008770 <GPIO_PeriClockControl+0x1b0>)
 80085ec:	4293      	cmp	r3, r2
 80085ee:	d106      	bne.n	80085fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80085f0:	4b5e      	ldr	r3, [pc, #376]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80085f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80085f4:	4a5d      	ldr	r2, [pc, #372]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80085f6:	f043 0302 	orr.w	r3, r3, #2
 80085fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80085fc:	e0ae      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80085fe:	687b      	ldr	r3, [r7, #4]
 8008600:	4a5c      	ldr	r2, [pc, #368]	; (8008774 <GPIO_PeriClockControl+0x1b4>)
 8008602:	4293      	cmp	r3, r2
 8008604:	d106      	bne.n	8008614 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8008606:	4b59      	ldr	r3, [pc, #356]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008608:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800860a:	4a58      	ldr	r2, [pc, #352]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800860c:	f043 0304 	orr.w	r3, r3, #4
 8008610:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008612:	e0a3      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	4a58      	ldr	r2, [pc, #352]	; (8008778 <GPIO_PeriClockControl+0x1b8>)
 8008618:	4293      	cmp	r3, r2
 800861a:	d106      	bne.n	800862a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800861c:	4b53      	ldr	r3, [pc, #332]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800861e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008620:	4a52      	ldr	r2, [pc, #328]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008622:	f043 0308 	orr.w	r3, r3, #8
 8008626:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008628:	e098      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	4a53      	ldr	r2, [pc, #332]	; (800877c <GPIO_PeriClockControl+0x1bc>)
 800862e:	4293      	cmp	r3, r2
 8008630:	d106      	bne.n	8008640 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8008632:	4b4e      	ldr	r3, [pc, #312]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008636:	4a4d      	ldr	r2, [pc, #308]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008638:	f043 0310 	orr.w	r3, r3, #16
 800863c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800863e:	e08d      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	4a4f      	ldr	r2, [pc, #316]	; (8008780 <GPIO_PeriClockControl+0x1c0>)
 8008644:	4293      	cmp	r3, r2
 8008646:	d106      	bne.n	8008656 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8008648:	4b48      	ldr	r3, [pc, #288]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800864a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800864c:	4a47      	ldr	r2, [pc, #284]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800864e:	f043 0320 	orr.w	r3, r3, #32
 8008652:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008654:	e082      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	4a4a      	ldr	r2, [pc, #296]	; (8008784 <GPIO_PeriClockControl+0x1c4>)
 800865a:	4293      	cmp	r3, r2
 800865c:	d106      	bne.n	800866c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800865e:	4b43      	ldr	r3, [pc, #268]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008662:	4a42      	ldr	r2, [pc, #264]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008664:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008668:	6313      	str	r3, [r2, #48]	; 0x30
}
 800866a:	e077      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	4a46      	ldr	r2, [pc, #280]	; (8008788 <GPIO_PeriClockControl+0x1c8>)
 8008670:	4293      	cmp	r3, r2
 8008672:	d106      	bne.n	8008682 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8008674:	4b3d      	ldr	r3, [pc, #244]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008676:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008678:	4a3c      	ldr	r2, [pc, #240]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800867a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800867e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008680:	e06c      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8008682:	687b      	ldr	r3, [r7, #4]
 8008684:	4a41      	ldr	r2, [pc, #260]	; (800878c <GPIO_PeriClockControl+0x1cc>)
 8008686:	4293      	cmp	r3, r2
 8008688:	d168      	bne.n	800875c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800868a:	4b38      	ldr	r3, [pc, #224]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800868c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800868e:	4a37      	ldr	r2, [pc, #220]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008690:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008694:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008696:	e061      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 8008698:	687b      	ldr	r3, [r7, #4]
 800869a:	4a33      	ldr	r2, [pc, #204]	; (8008768 <GPIO_PeriClockControl+0x1a8>)
 800869c:	4293      	cmp	r3, r2
 800869e:	d106      	bne.n	80086ae <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80086a0:	4b32      	ldr	r3, [pc, #200]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086a4:	4a31      	ldr	r2, [pc, #196]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086a6:	f023 0301 	bic.w	r3, r3, #1
 80086aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80086ac:	e056      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80086ae:	687b      	ldr	r3, [r7, #4]
 80086b0:	4a2f      	ldr	r2, [pc, #188]	; (8008770 <GPIO_PeriClockControl+0x1b0>)
 80086b2:	4293      	cmp	r3, r2
 80086b4:	d106      	bne.n	80086c4 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80086b6:	4b2d      	ldr	r3, [pc, #180]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086ba:	4a2c      	ldr	r2, [pc, #176]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086bc:	f023 0302 	bic.w	r3, r3, #2
 80086c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80086c2:	e04b      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	4a2b      	ldr	r2, [pc, #172]	; (8008774 <GPIO_PeriClockControl+0x1b4>)
 80086c8:	4293      	cmp	r3, r2
 80086ca:	d106      	bne.n	80086da <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80086cc:	4b27      	ldr	r3, [pc, #156]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086d0:	4a26      	ldr	r2, [pc, #152]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086d2:	f023 0304 	bic.w	r3, r3, #4
 80086d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80086d8:	e040      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80086da:	687b      	ldr	r3, [r7, #4]
 80086dc:	4a26      	ldr	r2, [pc, #152]	; (8008778 <GPIO_PeriClockControl+0x1b8>)
 80086de:	4293      	cmp	r3, r2
 80086e0:	d106      	bne.n	80086f0 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80086e2:	4b22      	ldr	r3, [pc, #136]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086e6:	4a21      	ldr	r2, [pc, #132]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086e8:	f023 0308 	bic.w	r3, r3, #8
 80086ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80086ee:	e035      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 80086f0:	687b      	ldr	r3, [r7, #4]
 80086f2:	4a22      	ldr	r2, [pc, #136]	; (800877c <GPIO_PeriClockControl+0x1bc>)
 80086f4:	4293      	cmp	r3, r2
 80086f6:	d106      	bne.n	8008706 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80086f8:	4b1c      	ldr	r3, [pc, #112]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80086fc:	4a1b      	ldr	r2, [pc, #108]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 80086fe:	f023 0310 	bic.w	r3, r3, #16
 8008702:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008704:	e02a      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	4a1d      	ldr	r2, [pc, #116]	; (8008780 <GPIO_PeriClockControl+0x1c0>)
 800870a:	4293      	cmp	r3, r2
 800870c:	d106      	bne.n	800871c <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800870e:	4b17      	ldr	r3, [pc, #92]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008712:	4a16      	ldr	r2, [pc, #88]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008714:	f023 0320 	bic.w	r3, r3, #32
 8008718:	6313      	str	r3, [r2, #48]	; 0x30
}
 800871a:	e01f      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800871c:	687b      	ldr	r3, [r7, #4]
 800871e:	4a19      	ldr	r2, [pc, #100]	; (8008784 <GPIO_PeriClockControl+0x1c4>)
 8008720:	4293      	cmp	r3, r2
 8008722:	d106      	bne.n	8008732 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8008724:	4b11      	ldr	r3, [pc, #68]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008726:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008728:	4a10      	ldr	r2, [pc, #64]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800872a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800872e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008730:	e014      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8008732:	687b      	ldr	r3, [r7, #4]
 8008734:	4a14      	ldr	r2, [pc, #80]	; (8008788 <GPIO_PeriClockControl+0x1c8>)
 8008736:	4293      	cmp	r3, r2
 8008738:	d106      	bne.n	8008748 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800873a:	4b0c      	ldr	r3, [pc, #48]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 800873c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800873e:	4a0b      	ldr	r2, [pc, #44]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008740:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008744:	6313      	str	r3, [r2, #48]	; 0x30
}
 8008746:	e009      	b.n	800875c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8008748:	687b      	ldr	r3, [r7, #4]
 800874a:	4a10      	ldr	r2, [pc, #64]	; (800878c <GPIO_PeriClockControl+0x1cc>)
 800874c:	4293      	cmp	r3, r2
 800874e:	d105      	bne.n	800875c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8008750:	4b06      	ldr	r3, [pc, #24]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008752:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008754:	4a05      	ldr	r2, [pc, #20]	; (800876c <GPIO_PeriClockControl+0x1ac>)
 8008756:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800875a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800875c:	bf00      	nop
 800875e:	370c      	adds	r7, #12
 8008760:	46bd      	mov	sp, r7
 8008762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008766:	4770      	bx	lr
 8008768:	40020000 	.word	0x40020000
 800876c:	40023800 	.word	0x40023800
 8008770:	40020400 	.word	0x40020400
 8008774:	40020800 	.word	0x40020800
 8008778:	40020c00 	.word	0x40020c00
 800877c:	40021000 	.word	0x40021000
 8008780:	40021400 	.word	0x40021400
 8008784:	40021800 	.word	0x40021800
 8008788:	40021c00 	.word	0x40021c00
 800878c:	40022000 	.word	0x40022000

08008790 <GPIO_WriteToOutputPin>:
 *
 * @Note              -

 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8008790:	b480      	push	{r7}
 8008792:	b083      	sub	sp, #12
 8008794:	af00      	add	r7, sp, #0
 8008796:	6078      	str	r0, [r7, #4]
 8008798:	460b      	mov	r3, r1
 800879a:	70fb      	strb	r3, [r7, #3]
 800879c:	4613      	mov	r3, r2
 800879e:	70bb      	strb	r3, [r7, #2]
	if(Value==ENABLE)
 80087a0:	78bb      	ldrb	r3, [r7, #2]
 80087a2:	2b01      	cmp	r3, #1
 80087a4:	d109      	bne.n	80087ba <GPIO_WriteToOutputPin+0x2a>
	{
		 pGPIOx->ODR|=(1<<PinNumber);
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	695b      	ldr	r3, [r3, #20]
 80087aa:	78fa      	ldrb	r2, [r7, #3]
 80087ac:	2101      	movs	r1, #1
 80087ae:	fa01 f202 	lsl.w	r2, r1, r2
 80087b2:	431a      	orrs	r2, r3
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	615a      	str	r2, [r3, #20]
		 pGPIOx->ODR&=~(1<<PinNumber);
	}



}
 80087b8:	e009      	b.n	80087ce <GPIO_WriteToOutputPin+0x3e>
		 pGPIOx->ODR&=~(1<<PinNumber);
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	695b      	ldr	r3, [r3, #20]
 80087be:	78fa      	ldrb	r2, [r7, #3]
 80087c0:	2101      	movs	r1, #1
 80087c2:	fa01 f202 	lsl.w	r2, r1, r2
 80087c6:	43d2      	mvns	r2, r2
 80087c8:	401a      	ands	r2, r3
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	615a      	str	r2, [r3, #20]
}
 80087ce:	bf00      	nop
 80087d0:	370c      	adds	r7, #12
 80087d2:	46bd      	mov	sp, r7
 80087d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087d8:	4770      	bx	lr
	...

080087dc <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 80087dc:	b480      	push	{r7}
 80087de:	b083      	sub	sp, #12
 80087e0:	af00      	add	r7, sp, #0
 80087e2:	4603      	mov	r3, r0
 80087e4:	460a      	mov	r2, r1
 80087e6:	71fb      	strb	r3, [r7, #7]
 80087e8:	4613      	mov	r3, r2
 80087ea:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 80087ec:	79bb      	ldrb	r3, [r7, #6]
 80087ee:	2b01      	cmp	r3, #1
 80087f0:	d133      	bne.n	800885a <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80087f2:	79fb      	ldrb	r3, [r7, #7]
 80087f4:	2b1f      	cmp	r3, #31
 80087f6:	d80a      	bhi.n	800880e <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 80087f8:	4b35      	ldr	r3, [pc, #212]	; (80088d0 <GPIO_IRQInterruptConfig+0xf4>)
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	79fa      	ldrb	r2, [r7, #7]
 80087fe:	2101      	movs	r1, #1
 8008800:	fa01 f202 	lsl.w	r2, r1, r2
 8008804:	4611      	mov	r1, r2
 8008806:	4a32      	ldr	r2, [pc, #200]	; (80088d0 <GPIO_IRQInterruptConfig+0xf4>)
 8008808:	430b      	orrs	r3, r1
 800880a:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 800880c:	e059      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 800880e:	79fb      	ldrb	r3, [r7, #7]
 8008810:	2b1f      	cmp	r3, #31
 8008812:	d90f      	bls.n	8008834 <GPIO_IRQInterruptConfig+0x58>
 8008814:	79fb      	ldrb	r3, [r7, #7]
 8008816:	2b3f      	cmp	r3, #63	; 0x3f
 8008818:	d80c      	bhi.n	8008834 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 800881a:	4b2e      	ldr	r3, [pc, #184]	; (80088d4 <GPIO_IRQInterruptConfig+0xf8>)
 800881c:	681b      	ldr	r3, [r3, #0]
 800881e:	79fa      	ldrb	r2, [r7, #7]
 8008820:	f002 021f 	and.w	r2, r2, #31
 8008824:	2101      	movs	r1, #1
 8008826:	fa01 f202 	lsl.w	r2, r1, r2
 800882a:	4611      	mov	r1, r2
 800882c:	4a29      	ldr	r2, [pc, #164]	; (80088d4 <GPIO_IRQInterruptConfig+0xf8>)
 800882e:	430b      	orrs	r3, r1
 8008830:	6013      	str	r3, [r2, #0]
 8008832:	e046      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 8008834:	79fb      	ldrb	r3, [r7, #7]
 8008836:	2b3f      	cmp	r3, #63	; 0x3f
 8008838:	d943      	bls.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
 800883a:	79fb      	ldrb	r3, [r7, #7]
 800883c:	2b5f      	cmp	r3, #95	; 0x5f
 800883e:	d840      	bhi.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 8008840:	4b25      	ldr	r3, [pc, #148]	; (80088d8 <GPIO_IRQInterruptConfig+0xfc>)
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	79fa      	ldrb	r2, [r7, #7]
 8008846:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800884a:	2101      	movs	r1, #1
 800884c:	fa01 f202 	lsl.w	r2, r1, r2
 8008850:	4611      	mov	r1, r2
 8008852:	4a21      	ldr	r2, [pc, #132]	; (80088d8 <GPIO_IRQInterruptConfig+0xfc>)
 8008854:	430b      	orrs	r3, r1
 8008856:	6013      	str	r3, [r2, #0]
}
 8008858:	e033      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 800885a:	79fb      	ldrb	r3, [r7, #7]
 800885c:	2b1f      	cmp	r3, #31
 800885e:	d80a      	bhi.n	8008876 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 8008860:	4b1e      	ldr	r3, [pc, #120]	; (80088dc <GPIO_IRQInterruptConfig+0x100>)
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	79fa      	ldrb	r2, [r7, #7]
 8008866:	2101      	movs	r1, #1
 8008868:	fa01 f202 	lsl.w	r2, r1, r2
 800886c:	4611      	mov	r1, r2
 800886e:	4a1b      	ldr	r2, [pc, #108]	; (80088dc <GPIO_IRQInterruptConfig+0x100>)
 8008870:	430b      	orrs	r3, r1
 8008872:	6013      	str	r3, [r2, #0]
}
 8008874:	e025      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 8008876:	79fb      	ldrb	r3, [r7, #7]
 8008878:	2b1f      	cmp	r3, #31
 800887a:	d90f      	bls.n	800889c <GPIO_IRQInterruptConfig+0xc0>
 800887c:	79fb      	ldrb	r3, [r7, #7]
 800887e:	2b3f      	cmp	r3, #63	; 0x3f
 8008880:	d80c      	bhi.n	800889c <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 8008882:	4b17      	ldr	r3, [pc, #92]	; (80088e0 <GPIO_IRQInterruptConfig+0x104>)
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	79fa      	ldrb	r2, [r7, #7]
 8008888:	f002 021f 	and.w	r2, r2, #31
 800888c:	2101      	movs	r1, #1
 800888e:	fa01 f202 	lsl.w	r2, r1, r2
 8008892:	4611      	mov	r1, r2
 8008894:	4a12      	ldr	r2, [pc, #72]	; (80088e0 <GPIO_IRQInterruptConfig+0x104>)
 8008896:	430b      	orrs	r3, r1
 8008898:	6013      	str	r3, [r2, #0]
 800889a:	e012      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 800889c:	79fb      	ldrb	r3, [r7, #7]
 800889e:	2b3f      	cmp	r3, #63	; 0x3f
 80088a0:	d90f      	bls.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
 80088a2:	79fb      	ldrb	r3, [r7, #7]
 80088a4:	2b5f      	cmp	r3, #95	; 0x5f
 80088a6:	d80c      	bhi.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80088a8:	4b0e      	ldr	r3, [pc, #56]	; (80088e4 <GPIO_IRQInterruptConfig+0x108>)
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	79fa      	ldrb	r2, [r7, #7]
 80088ae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80088b2:	2101      	movs	r1, #1
 80088b4:	fa01 f202 	lsl.w	r2, r1, r2
 80088b8:	4611      	mov	r1, r2
 80088ba:	4a0a      	ldr	r2, [pc, #40]	; (80088e4 <GPIO_IRQInterruptConfig+0x108>)
 80088bc:	430b      	orrs	r3, r1
 80088be:	6013      	str	r3, [r2, #0]
}
 80088c0:	e7ff      	b.n	80088c2 <GPIO_IRQInterruptConfig+0xe6>
 80088c2:	bf00      	nop
 80088c4:	370c      	adds	r7, #12
 80088c6:	46bd      	mov	sp, r7
 80088c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088cc:	4770      	bx	lr
 80088ce:	bf00      	nop
 80088d0:	e000e100 	.word	0xe000e100
 80088d4:	e000e104 	.word	0xe000e104
 80088d8:	e000e108 	.word	0xe000e108
 80088dc:	e000e180 	.word	0xe000e180
 80088e0:	e000e184 	.word	0xe000e184
 80088e4:	e000e188 	.word	0xe000e188

080088e8 <GPIO_IRQPriorityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 80088e8:	b480      	push	{r7}
 80088ea:	b085      	sub	sp, #20
 80088ec:	af00      	add	r7, sp, #0
 80088ee:	4603      	mov	r3, r0
 80088f0:	6039      	str	r1, [r7, #0]
 80088f2:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 80088f4:	79fb      	ldrb	r3, [r7, #7]
 80088f6:	089b      	lsrs	r3, r3, #2
 80088f8:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber %4 ;
 80088fa:	79fb      	ldrb	r3, [r7, #7]
 80088fc:	f003 0303 	and.w	r3, r3, #3
 8008900:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 8008902:	7bbb      	ldrb	r3, [r7, #14]
 8008904:	00db      	lsls	r3, r3, #3
 8008906:	b2db      	uxtb	r3, r3
 8008908:	3304      	adds	r3, #4
 800890a:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDR + iprx ) |=  ( IRQPriority << shift_amount );
 800890c:	7bfb      	ldrb	r3, [r7, #15]
 800890e:	009b      	lsls	r3, r3, #2
 8008910:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8008914:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8008918:	6819      	ldr	r1, [r3, #0]
 800891a:	7b7b      	ldrb	r3, [r7, #13]
 800891c:	683a      	ldr	r2, [r7, #0]
 800891e:	409a      	lsls	r2, r3
 8008920:	7bfb      	ldrb	r3, [r7, #15]
 8008922:	009b      	lsls	r3, r3, #2
 8008924:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8008928:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800892c:	430a      	orrs	r2, r1
 800892e:	601a      	str	r2, [r3, #0]
}
 8008930:	bf00      	nop
 8008932:	3714      	adds	r7, #20
 8008934:	46bd      	mov	sp, r7
 8008936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800893a:	4770      	bx	lr

0800893c <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 800893c:	b480      	push	{r7}
 800893e:	b083      	sub	sp, #12
 8008940:	af00      	add	r7, sp, #0
 8008942:	4603      	mov	r3, r0
 8008944:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 8008946:	4b0c      	ldr	r3, [pc, #48]	; (8008978 <GPIO_IRQHandling+0x3c>)
 8008948:	695b      	ldr	r3, [r3, #20]
 800894a:	79fa      	ldrb	r2, [r7, #7]
 800894c:	2101      	movs	r1, #1
 800894e:	fa01 f202 	lsl.w	r2, r1, r2
 8008952:	4013      	ands	r3, r2
 8008954:	2b00      	cmp	r3, #0
 8008956:	d009      	beq.n	800896c <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 8008958:	4b07      	ldr	r3, [pc, #28]	; (8008978 <GPIO_IRQHandling+0x3c>)
 800895a:	695b      	ldr	r3, [r3, #20]
 800895c:	79fa      	ldrb	r2, [r7, #7]
 800895e:	2101      	movs	r1, #1
 8008960:	fa01 f202 	lsl.w	r2, r1, r2
 8008964:	4611      	mov	r1, r2
 8008966:	4a04      	ldr	r2, [pc, #16]	; (8008978 <GPIO_IRQHandling+0x3c>)
 8008968:	430b      	orrs	r3, r1
 800896a:	6153      	str	r3, [r2, #20]
	}

}
 800896c:	bf00      	nop
 800896e:	370c      	adds	r7, #12
 8008970:	46bd      	mov	sp, r7
 8008972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008976:	4770      	bx	lr
 8008978:	40013c00 	.word	0x40013c00

0800897c <delay>:
 */

#include"stm32f446xx.h"
#include<string.h>
void delay(void)
 {
 800897c:	b480      	push	{r7}
 800897e:	b083      	sub	sp, #12
 8008980:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 8008982:	2300      	movs	r3, #0
 8008984:	607b      	str	r3, [r7, #4]
 8008986:	e002      	b.n	800898e <delay+0x12>
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	3301      	adds	r3, #1
 800898c:	607b      	str	r3, [r7, #4]
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	4a04      	ldr	r2, [pc, #16]	; (80089a4 <delay+0x28>)
 8008992:	4293      	cmp	r3, r2
 8008994:	d9f8      	bls.n	8008988 <delay+0xc>
}
 8008996:	bf00      	nop
 8008998:	bf00      	nop
 800899a:	370c      	adds	r7, #12
 800899c:	46bd      	mov	sp, r7
 800899e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089a2:	4770      	bx	lr
 80089a4:	0007a11f 	.word	0x0007a11f

080089a8 <main>:
int main()
{
 80089a8:	b580      	push	{r7, lr}
 80089aa:	b086      	sub	sp, #24
 80089ac:	af00      	add	r7, sp, #0
	//LED PA5
	GPIO_Handle_t GpioLed;
	memset(&GpioLed,0,sizeof(GpioLed));
 80089ae:	f107 030c 	add.w	r3, r7, #12
 80089b2:	220c      	movs	r2, #12
 80089b4:	2100      	movs	r1, #0
 80089b6:	4618      	mov	r0, r3
 80089b8:	f000 f871 	bl	8008a9e <memset>
	GpioLed.pGPIOx = GPIOA;
 80089bc:	4b19      	ldr	r3, [pc, #100]	; (8008a24 <main+0x7c>)
 80089be:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80089c0:	2305      	movs	r3, #5
 80089c2:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80089c4:	2301      	movs	r3, #1
 80089c6:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80089c8:	2302      	movs	r3, #2
 80089ca:	74bb      	strb	r3, [r7, #18]
	//GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80089cc:	2300      	movs	r3, #0
 80089ce:	74fb      	strb	r3, [r7, #19]
	GPIO_Init(&GpioLed);
 80089d0:	f107 030c 	add.w	r3, r7, #12
 80089d4:	4618      	mov	r0, r3
 80089d6:	f7ff fc15 	bl	8008204 <GPIO_Init>


	//Button PC13
	GPIO_Handle_t GpioButton;
	memset(&GpioButton,0,sizeof(GpioButton));
 80089da:	463b      	mov	r3, r7
 80089dc:	220c      	movs	r2, #12
 80089de:	2100      	movs	r1, #0
 80089e0:	4618      	mov	r0, r3
 80089e2:	f000 f85c 	bl	8008a9e <memset>
	GpioButton.pGPIOx = GPIOC;
 80089e6:	4b10      	ldr	r3, [pc, #64]	; (8008a28 <main+0x80>)
 80089e8:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80089ea:	230d      	movs	r3, #13
 80089ec:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80089ee:	2304      	movs	r3, #4
 80089f0:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80089f2:	2302      	movs	r3, #2
 80089f4:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
 80089f6:	2302      	movs	r3, #2
 80089f8:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(&GpioButton);
 80089fa:	463b      	mov	r3, r7
 80089fc:	4618      	mov	r0, r3
 80089fe:	f7ff fc01 	bl	8008204 <GPIO_Init>


	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
 8008a02:	210f      	movs	r1, #15
 8008a04:	2028      	movs	r0, #40	; 0x28
 8008a06:	f7ff ff6f 	bl	80088e8 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,ENABLE);
 8008a0a:	2101      	movs	r1, #1
 8008a0c:	2028      	movs	r0, #40	; 0x28
 8008a0e:	f7ff fee5 	bl	80087dc <GPIO_IRQInterruptConfig>
	while(1){
		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, DISABLE);
 8008a12:	2200      	movs	r2, #0
 8008a14:	2105      	movs	r1, #5
 8008a16:	4803      	ldr	r0, [pc, #12]	; (8008a24 <main+0x7c>)
 8008a18:	f7ff feba 	bl	8008790 <GPIO_WriteToOutputPin>
		delay();
 8008a1c:	f7ff ffae 	bl	800897c <delay>
		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, DISABLE);
 8008a20:	e7f7      	b.n	8008a12 <main+0x6a>
 8008a22:	bf00      	nop
 8008a24:	40020000 	.word	0x40020000
 8008a28:	40020800 	.word	0x40020800

08008a2c <EXTI15_10_IRQHandler>:
	}
}
void EXTI15_10_IRQHandler(void)
{
 8008a2c:	b580      	push	{r7, lr}
 8008a2e:	af00      	add	r7, sp, #0
   /// delay(); //200ms . wait till button de-bouncing gets over
	GPIO_IRQHandling(GPIO_PIN_NO_13); //clear the pending event from exti line
 8008a30:	200d      	movs	r0, #13
 8008a32:	f7ff ff83 	bl	800893c <GPIO_IRQHandling>
	GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, ENABLE);
 8008a36:	2201      	movs	r2, #1
 8008a38:	2105      	movs	r1, #5
 8008a3a:	4803      	ldr	r0, [pc, #12]	; (8008a48 <EXTI15_10_IRQHandler+0x1c>)
 8008a3c:	f7ff fea8 	bl	8008790 <GPIO_WriteToOutputPin>
	delay();
 8008a40:	f7ff ff9c 	bl	800897c <delay>
}
 8008a44:	bf00      	nop
 8008a46:	bd80      	pop	{r7, pc}
 8008a48:	40020000 	.word	0x40020000

08008a4c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8008a4c:	480d      	ldr	r0, [pc, #52]	; (8008a84 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8008a4e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8008a50:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8008a54:	480c      	ldr	r0, [pc, #48]	; (8008a88 <LoopForever+0x6>)
  ldr r1, =_edata
 8008a56:	490d      	ldr	r1, [pc, #52]	; (8008a8c <LoopForever+0xa>)
  ldr r2, =_sidata
 8008a58:	4a0d      	ldr	r2, [pc, #52]	; (8008a90 <LoopForever+0xe>)
  movs r3, #0
 8008a5a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8008a5c:	e002      	b.n	8008a64 <LoopCopyDataInit>

08008a5e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8008a5e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8008a60:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8008a62:	3304      	adds	r3, #4

08008a64 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8008a64:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8008a66:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8008a68:	d3f9      	bcc.n	8008a5e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8008a6a:	4a0a      	ldr	r2, [pc, #40]	; (8008a94 <LoopForever+0x12>)
  ldr r4, =_ebss
 8008a6c:	4c0a      	ldr	r4, [pc, #40]	; (8008a98 <LoopForever+0x16>)
  movs r3, #0
 8008a6e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8008a70:	e001      	b.n	8008a76 <LoopFillZerobss>

08008a72 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8008a72:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8008a74:	3204      	adds	r2, #4

08008a76 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8008a76:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8008a78:	d3fb      	bcc.n	8008a72 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8008a7a:	f000 f819 	bl	8008ab0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8008a7e:	f7ff ff93 	bl	80089a8 <main>

08008a82 <LoopForever>:

LoopForever:
  b LoopForever
 8008a82:	e7fe      	b.n	8008a82 <LoopForever>
  ldr   r0, =_estack
 8008a84:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8008a88:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8008a8c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8008a90:	08008b18 	.word	0x08008b18
  ldr r2, =_sbss
 8008a94:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8008a98:	2000001c 	.word	0x2000001c

08008a9c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8008a9c:	e7fe      	b.n	8008a9c <ADC_IRQHandler>

08008a9e <memset>:
 8008a9e:	4402      	add	r2, r0
 8008aa0:	4603      	mov	r3, r0
 8008aa2:	4293      	cmp	r3, r2
 8008aa4:	d100      	bne.n	8008aa8 <memset+0xa>
 8008aa6:	4770      	bx	lr
 8008aa8:	f803 1b01 	strb.w	r1, [r3], #1
 8008aac:	e7f9      	b.n	8008aa2 <memset+0x4>
	...

08008ab0 <__libc_init_array>:
 8008ab0:	b570      	push	{r4, r5, r6, lr}
 8008ab2:	4d0d      	ldr	r5, [pc, #52]	; (8008ae8 <__libc_init_array+0x38>)
 8008ab4:	4c0d      	ldr	r4, [pc, #52]	; (8008aec <__libc_init_array+0x3c>)
 8008ab6:	1b64      	subs	r4, r4, r5
 8008ab8:	10a4      	asrs	r4, r4, #2
 8008aba:	2600      	movs	r6, #0
 8008abc:	42a6      	cmp	r6, r4
 8008abe:	d109      	bne.n	8008ad4 <__libc_init_array+0x24>
 8008ac0:	4d0b      	ldr	r5, [pc, #44]	; (8008af0 <__libc_init_array+0x40>)
 8008ac2:	4c0c      	ldr	r4, [pc, #48]	; (8008af4 <__libc_init_array+0x44>)
 8008ac4:	f000 f818 	bl	8008af8 <_init>
 8008ac8:	1b64      	subs	r4, r4, r5
 8008aca:	10a4      	asrs	r4, r4, #2
 8008acc:	2600      	movs	r6, #0
 8008ace:	42a6      	cmp	r6, r4
 8008ad0:	d105      	bne.n	8008ade <__libc_init_array+0x2e>
 8008ad2:	bd70      	pop	{r4, r5, r6, pc}
 8008ad4:	f855 3b04 	ldr.w	r3, [r5], #4
 8008ad8:	4798      	blx	r3
 8008ada:	3601      	adds	r6, #1
 8008adc:	e7ee      	b.n	8008abc <__libc_init_array+0xc>
 8008ade:	f855 3b04 	ldr.w	r3, [r5], #4
 8008ae2:	4798      	blx	r3
 8008ae4:	3601      	adds	r6, #1
 8008ae6:	e7f2      	b.n	8008ace <__libc_init_array+0x1e>
 8008ae8:	08008b10 	.word	0x08008b10
 8008aec:	08008b10 	.word	0x08008b10
 8008af0:	08008b10 	.word	0x08008b10
 8008af4:	08008b14 	.word	0x08008b14

08008af8 <_init>:
 8008af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008afa:	bf00      	nop
 8008afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008afe:	bc08      	pop	{r3}
 8008b00:	469e      	mov	lr, r3
 8008b02:	4770      	bx	lr

08008b04 <_fini>:
 8008b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b06:	bf00      	nop
 8008b08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b0a:	bc08      	pop	{r3}
 8008b0c:	469e      	mov	lr, r3
 8008b0e:	4770      	bx	lr
